"""
======================================
        HealthAI Telegram –ë–æ—Ç
======================================
–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –°–∞–≤—É–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä
"""

# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏
import ai
import os
import time
import telebot
import threading
from typing import Union, List
from dotenv import load_dotenv
from database import getAllUserList
from deep_translator import GoogleTranslator
from support import checkInt, Switch, ram, stringToBool
from database import Patient, Doctor, getUser, History, Admin, Operations

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
ai.initAi()
load_dotenv()
bot = telebot.TeleBot(os.getenv("TOKEN"))

'''
======================================
          –®–ê–ë–õ–û–ù–´ –ö–õ–ê–í–ò–ê–¢–£–†    
======================================
'''

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã
cancel = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
cancel.add(telebot.types.KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–≥–ª–∞—Å–∏—è
apply = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
apply.add(telebot.types.KeyboardButton(text="‚úî –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
          telebot.types.KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))

'''
======================================
        –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –û–¢–ö–õ–ò–ö–û–í    
======================================
'''


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–π –≤—Ä–∞—á–∞
def doctorHandler(call: telebot.types.Message, message: dict, step: int = 0):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(step):
        if case(0):
            # –ï—Å–ª–∏ –Ω–µ –æ—Ç–º–µ–Ω–∞
            if '–æ—Ç–º–µ–Ω–∏—Ç—å' not in call.text.lower():
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(f'‚úî –ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–º–µ–Ω–µ–Ω–∞ —Å "{message["user"].get()["qualification"]}" –Ω–∞ '
                            f'"{call.text}"', message['user'], reply=telebot.types.ReplyKeyboardRemove())
                # –ú–µ–Ω—è–µ–º –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é
                message['user'].update(Doctor.Types.qualification, call.text)
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ùå –°–º–µ–Ω–∞ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–∞', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(1):
            # –ï—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            if '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å' in call.text.lower():
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ùå –í—ã —É—Å–ø–µ—à–Ω–æ —É–≤–æ–ª–∏–ª–∏—Å—å.\n–ê–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª—ë–Ω. –ë—ã–ª–∏ —Ä–∞–¥—ã —Å –í–∞–º–∏ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å üòâ',
                            message['user'], reply=telebot.types.ReplyKeyboardRemove())
                # –ò–Ω—Ñ–æ–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                for user in getAllUserList():
                    # –ï—Å–ª–∏ –≤—Ä–∞—á
                    if isinstance(user, Doctor):
                        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–µ
                        if user.getSubordinates():
                            # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–º
                            for doctor in user.getSubordinates():
                                # –ï—Å–ª–∏ –≤—Ä–∞—á –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø–æ–¥—á–∏–Ω–µ–Ω–∏–∏
                                if message['user'].get()['id'] == doctor.get()['id']:
                                    # –£–¥–∞–ª—è–µ–º –≤—Ä–∞—á–∞
                                    doctor.update(message['user'])
                                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                                    sendMessage(f'üí• –í–∞—à –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–π {message["user"].get()["username"]}'
                                                f' —É–≤–æ–ª–∏–ª—Å—è –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∂–µ–ª–∞–Ω–∏—é', user)
                # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç—ã
                if message['user'].getPatients():
                    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                    for patient in message['user'].getPatients():
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage(f'üí• –í–∞—à –ª–µ—á–∞—â–∏–π –≤—Ä–∞—á {message["user"].get()["username"]}'
                                    f' —É–≤–æ–ª–∏–ª—Å—è –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∂–µ–ª–∞–Ω–∏—é', patient)
                # –£–¥–∞–ª—è–µ–º –≤—Ä–∞—á–∞
                message['user'].remove()
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ùå –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(2):
            # –ï—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            if '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å' in call.text.lower():
                # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ü–∏—é
                ram[message['user'].get('id')] = {
                    'type': 'system',
                    'operation': Operations.ChangeMe
                }
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('ü§î –ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ùå –°–º–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case():
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–π –ø–∞—Ü–∏–µ–Ω—Ç–∞
def patientHandler(call: telebot.types.Message, message: dict, step: int = 0):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(step):
        if case(0):
            # –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—Ç–º–µ–Ω–∞
            if '–æ—Ç–º–µ–Ω–∏—Ç—å' in call.text.lower():
                # –£–¥–∞–ª—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
                ram.pop(message['user'].get()['id'])
                # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                sendMessage('‚ùå –ü–æ–∏—Å–∫ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –ø—Ä–∏—ë–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(1):
            # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω
            if '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å' in call.text.lower():
                # –í—Ä–∞—á–∏
                doctors: List[Doctor] = []
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–∞—á–∞–º
                for doctor in getAllUserList():
                    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤—Ä–∞—á
                    if isinstance(doctor, Doctor):
                        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç—ã
                        if doctor.getPatients():
                            # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                            for patient in doctor.getPatients():
                                # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                                if message['user'].get()['id'] == patient.get()['id']:
                                    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–∞—á–∞
                                    doctors.append(doctor)
                                    # –î–µ–ª–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É
                                    sendMessage(f'üéâ –ü–∞—Ü–∏–µ–Ω—Ç {message["user"].get()["username"]} –≤—ã–ø–∏—Å–∞–ª—Å—è'
                                                f'–ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∂–µ–ª–∞–Ω–∏—é!', doctor)
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–∞—á–∞–º
                for doctor in doctors:
                    # –£–¥–∞–ª—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
                    doctor.update(Doctor.Types.patients, message['user'])
                # –£–¥–∞–ª—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
                message['user'].extract(doctors)
                # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                sendMessage('‚úî –í—ã –≤—ã–ø–∏—Å–∞–ª–∏—Å—å!', message['user'], reply=telebot.types.ReplyKeyboardRemove())
            elif '–æ—Ç–º–µ–Ω–∏—Ç—å' in call.text.lower():
                # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                sendMessage('‚ùå –í—ã–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞', message['user'], reply=telebot.types.ReplyKeyboardRemove())
            else:
                # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                sendMessage('üòê –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É', message['user'])
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                bot.register_next_step_handler(call, patientHandler, message, 1)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case():
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ—É–Ω–∫—Ü–∏–π –∞–¥–º–∏–Ω–∞
def adminHandler(call: telebot.types.Message, message: dict, step: int = 0):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(step):
        if case(0):
            # –ü—Ä–∏–Ω–∏–º–∞–µ–º –æ—Ç–≤–µ—Ç
            ram[call.text] = {'type': 'system'}
            ram[call.text]['operation'] = Operations.MakeAdmin
            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('ü§î –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å.\n–£—Ä–æ–≤–µ–Ω—å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–≤—ã—à–∞—Ç—å –≤–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π!',
                        message['user'])
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
            bot.register_next_step_handler(call, adminHandler, message, 4)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(1):
            # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–∞–∫—Ç
            debugValue: bool = makeContact(call, message)
            # –ï—Å–ª–∏ —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
            if stringToBool(os.getenv('DEBUG')):
                # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                print(f'Chat started with {call.text} and {message["user"].get()["id"]} with result: {debugValue}')
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(2):
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞–∂–∞—Ç–∞ –æ—Ç–º–µ–Ω–∞
            if '–æ—Ç–º–µ–Ω–∏—Ç—å' not in call.text.lower():
                # –ï—Å–ª–∏ –∞–¥–º–∏–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                if Admin(message['user']).getAdmin()['level'] > 0:
                    try:
                        # –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
                        if Admin(getUser(call.text)).getAdmin()['level'] < Admin(message['user']).getAdmin()['level']:
                            # –£–¥–∞–ª—è–µ–º –∞–¥–º–∏–Ω–∞
                            Admin(getUser(call.text)).removeAdmin()
                            # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                            sendMessage(f'‚úî –ê–¥–º–∏–Ω —Å ID {call.text} —Å–Ω—è—Ç —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏', message['user'],
                                        reply=telebot.types.ReplyKeyboardRemove())
                            sendMessage(f'‚ùå –í—ã –±—ã–ª–∏ —Å–Ω—è—Ç—ã —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–æ–º '
                                        f'{message['user'].get()["username"]}',
                                        getUser(call.text))
                    except AttributeError:
                        # –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
                        if (Admin(getUser(int(call.text))).getAdmin()['level'] <
                                Admin(message['user']).getAdmin()['level']):
                            # –£–¥–∞–ª—è–µ–º –∞–¥–º–∏–Ω–∞
                            Admin(getUser(int(call.text))).removeAdmin()
                            # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                            sendMessage(f'‚úî –ê–¥–º–∏–Ω —Å ID {call.text} —Å–Ω—è—Ç —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏', message['user'],
                                        reply=telebot.types.ReplyKeyboardRemove())
                            sendMessage(f'‚ùå –í—ã –±—ã–ª–∏ —Å–Ω—è—Ç—ã —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–æ–º '
                                        f'{message['user'].get()["username"]}',
                                        getUser(int(call.text)))
                else:
                    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    sendMessage('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –∞–¥–º–∏–Ω–∞ —Å–≤–æ–µ–≥–æ —Ä–∞–Ω–≥–∞ –∏–ª–∏ —Ä–∞–Ω–≥–æ–º –≤—ã—à–µ!', message['user'])
            else:
                # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                sendMessage('‚úî –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞', message['user'], reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(3):
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞–∂–∞—Ç–∞ –æ—Ç–º–µ–Ω–∞
            if '–æ—Ç–º–µ–Ω–∏—Ç—å' not in call.text.lower():
                # –ï—Å–ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –æ–Ω - –≤—Ä–∞—á
                if isinstance(getUser(call.text), Doctor):
                    # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                    getUser(call.text).remove()
                    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    sendMessage(f'‚úî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {call.text} –±—ã–ª —Å–Ω—è—Ç —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏!', message['user'])
                    sendMessage(f'‚ùå –í—ã –±—ã–ª–∏ —Å–Ω—è—Ç—ã —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º '
                                f'{message['user'].get()["username"]}!\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ —Ç–∞–∫—É—é –º–µ—Ä—É –Ω–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–π,'
                                f' –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <a href="t.me/{os.getenv("ADMIN").replace("@", "")}">'
                                f'—Å—Ç–∞—Ä—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</a>', getUser(call.text), message['user'])
                elif isinstance(getUser(int(call.text)), Doctor):
                    # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                    getUser(int(call.text)).remove()
                    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    sendMessage(f'‚úî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {call.text} –±—ã–ª —Å–Ω—è—Ç —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏!', message['user'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    sendMessage(f'‚ùå –í—ã –±—ã–ª–∏ —Å–Ω—è—Ç—ã —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º '
                                f'{message['user'].get()["username"]}!\n–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ —Ç–∞–∫—É—é –º–µ—Ä—É –Ω–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–π,'
                                f' –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <a href="t.me/{os.getenv("ADMIN").replace("@", "")}">'
                                f'—Å—Ç–∞—Ä—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</a>', getUser(int(call.text)), message['user'])
                else:
                    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    sendMessage('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤—Ä–∞—á–æ–º!',
                                message['user'], reply=telebot.types.ReplyKeyboardRemove())
            else:
                # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                sendMessage('‚úî –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞', message['user'], reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(4):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–∞
            if checkInt(call.text):
                # –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω
                if int(call.text) < Admin(message['user']).getAdmin()['level']:
                    # –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–ª—é—á
                    lastKey: str = "undefined"
                    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    keyboard.add(telebot.types.KeyboardButton(text="‚ùå –ù–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å"))
                    # –í—ã—á–∏—Å–ª—è–µ–º ID –æ–ø–µ—Ä–∞—Ü–∏–∏
                    for key in ram.keys():
                        try:
                            # –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω–∞—è
                            if ram[key]['type'] == 'system' and ram[key]['operation'] == Operations.MakeAdmin:
                                # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                                lastKey = key
                        except KeyError:
                            pass
                    # –í–Ω–æ—Å–∏–º –∫–ª—é—á
                    ram[lastKey]['level'] = int(call.text)
                    # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('ü§î –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –ø—Ä–µ—Ñ–∏–∫—Å', message['user'], reply=keyboard)
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(call, adminHandler, message, 5)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚òù –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º—ã–º —á–∏—Å–ª–æ–º.\n–í–∞—à —É—Ä–æ–≤–µ–Ω—å –Ω–∏–∂–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω '
                                '–≤–≤–µ–¥—ë–Ω–Ω–æ–º—É!', message['user'], reply=telebot.types.ReplyKeyboardRemove())
                    # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('ü§î –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å.\n–£—Ä–æ–≤–µ–Ω—å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–≤—ã—à–∞—Ç—å –≤–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π!',
                                message['user'], reply=telebot.types.ReplyKeyboardRemove())
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(call, adminHandler, message, 4)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º—ã–º —á–∏—Å–ª–æ–º!', message['user'])
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('ü§î –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —É—Ä–æ–≤–µ–Ω—å.\n–£—Ä–æ–≤–µ–Ω—å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–≤—ã—à–∞—Ç—å –≤–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π!',
                            message['user'], reply=telebot.types.ReplyKeyboardRemove())
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
                bot.register_next_step_handler(call, adminHandler, message, 4)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(5):
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(telebot.types.KeyboardButton(text="‚úî –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
                         telebot.types.KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))
            # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å
            if '–Ω–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å' not in call.text.lower():
                # –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–ª—é—á
                lastKey: str = "undefined"
                # –í—ã—á–∏—Å–ª—è–µ–º ID –æ–ø–µ—Ä–∞—Ü–∏–∏
                for key in ram.keys():
                    try:
                        # –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω–∞—è
                        if ram[key]['type'] == 'system' and ram[key]['operation'] == Operations.MakeAdmin:
                            # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                            lastKey = key
                    except KeyError:
                        pass
                # –ù–∞–∑–Ω–∞—á–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å
                ram[lastKey]['prefix'] = call.text
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(f'‚úî –ù–∞–∑–Ω–∞—á–µ–Ω –ø—Ä–µ—Ñ–∏–∫—Å: {call.text}\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ?', message['user'],
                            reply=keyboard)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(f'‚úî –ü—Ä–µ—Ñ–∏–∫—Å –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ?', message['user'],
                            reply=keyboard)
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
            bot.register_next_step_handler(call, adminHandler, message, 6)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case(6):
            # –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–ª—é—á
            lastKey: str = "undefined"
            # –í—ã—á–∏—Å–ª—è–µ–º ID –æ–ø–µ—Ä–∞—Ü–∏–∏
            for key in ram.keys():
                try:
                    # –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω–∞—è
                    if ram[key]['type'] == 'system' and ram[key]['operation'] == Operations.MakeAdmin:
                        # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                        lastKey = key
                except KeyError:
                    pass
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
            if '–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å' in call.text.lower():
                try:
                    # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage(f'‚úî –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ', message['user'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–æ —á–∏—Å–ª–æ
                    if checkInt(lastKey):
                        # –°–æ–∑–¥–∞—ë–º –∞–¥–º–∏–Ω–∞
                        admin: Admin = (Admin(getUser(int(lastKey))))
                        admin.writeNewAdmin(int(ram[lastKey]['level']), ram[lastKey]['prefix'])
                        # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
                        sendMessage(f'üí• <b>–í—ã –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–µ—Ç–∏ '
                                    f'HealthAI!</b>\n\n'
                                    f'–ü–æ–¥–æ–π–¥–∏—Ç–µ –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ –∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é —Å–≤–æ–∏—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π ü§ó\n–£—Ä–æ–≤–µ–Ω—å: '
                                    f'{admin.getAdmin()["level"]}\n–ü—Ä–µ—Ñ–∏–∫—Å: {admin.getAdmin()["prefix"]}',
                                    getUser(int(lastKey)))
                    else:
                        # –°–æ–∑–¥–∞—ë–º –∞–¥–º–∏–Ω–∞
                        admin: Admin = Admin(getUser(lastKey))
                        admin.writeNewAdmin(int(ram[lastKey]['level']), ram[lastKey]['prefix'])
                        # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
                        sendMessage(f'üí• <b>–í—ã –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–µ—Ç–∏ '
                                    f'HealthAI!</b>\n\n'
                                    f'–ü–æ–¥–æ–π–¥–∏—Ç–µ –¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω–æ –∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é —Å–≤–æ–∏—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π ü§ó\n–£—Ä–æ–≤–µ–Ω—å: '
                                    f'{admin.getAdmin()["level"]}\n–ü—Ä–µ—Ñ–∏–∫—Å: {admin.getAdmin()["prefix"]}',
                                    getUser(lastKey))
                except AttributeError:
                    # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage(f'‚ùå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {lastKey} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!',
                                message['user'], reply=telebot.types.ReplyKeyboardRemove())
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(f'‚ùå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    return None


'''
======================================
            –û–¢–ö–õ–ò–ö–ò –ë–û–¢–ê      
======================================
'''


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline –∑–∞–ø—Ä–æ—Å–æ–≤ –≤—Ä–∞—á–∞
def callCheckDoctor(call: telebot.types.Message, message: dict):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(message['message']):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        if case('doctorAnonim'):
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫
            ram[message['user'].get()['id']] = {
                'type': 'system',
                'operation': Operations.AnonContactFind
            }
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('ü§ù –ü–æ–∏—Å–∫ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –Ω–∞—á–∞—Ç!\n–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –ø–∞—Ü–∏–µ–Ω—Ç',
                        message['user'], reply=cancel)
            # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
            for key in ram:
                # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫
                if (ram[key]['type'] == 'system' and 'operation' in ram[key] and
                        ram[key]['operation'] == Operations.AnonContactFind):
                    # –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ - –ø–∞—Ü–∏–µ–Ω—Ç
                    if isinstance(getUser(key), Patient) or isinstance(getUser(int(key)), Patient):
                        # –£–¥–∞–ª—è–µ–º –∏–∑ –ø–∞–º—è—Ç–∏
                        ram.pop(message['user'].get()['id'])
                        ram.pop(key)
                        # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–∞–∫—Ç
                        makeContactFixed(call, message['user'], getUser(key))
                        # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                        return None
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
            bot.register_next_step_handler(call, doctorHandler, message)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('patient'):
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.InlineKeyboardMarkup()
            # –í—Ä–∞—á–∏
            patients: List[Patient] = message['user'].getPatients()
            # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç
            if patients:
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                for patient in patients:
                    # –í–Ω–æ—Å–∏–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                    keyboard.add(
                        telebot.types.InlineKeyboardButton(f"ü§ï {patient.get()['username']}",
                                                           callback_data=f"callFromTo|{message['user'].get()['id']}|"
                                                                         f"{patient.get()['id']}"),
                        telebot.types.InlineKeyboardButton(f"‚ù§Ô∏è‚Äçü©π –ù–∞–∑–Ω–∞—á–∏—Ç—å –ª–µ—á–µ–Ω–∏–µ",
                                                           callback_data=f"healCabinet|{message['user'].get()['id']}|"
                                                                         f"{patient.get()['id']}")
                    )
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ù£ –£ –í–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤', message['user'])
                # –õ–æ–º–∞–µ–º –±–ª–æ–∫
                break
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('ü§ï <b>–í–∞—à–∏ –ø–∞—Ü–∏–µ–Ω—Ç—ã:</b>', message['user'], reply=keyboard)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('qualification'):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('ü§î –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é', message['user'], reply=cancel)
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            bot.register_next_step_handler(call, doctorHandler, message)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('patientKick'):
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.InlineKeyboardMarkup()
            # –í—Ä–∞—á–∏
            patients: List[Patient] = message['user'].getPatients()
            # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç
            if patients:
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                for patient in patients:
                    # –í–Ω–æ—Å–∏–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                    keyboard.add(
                        telebot.types.InlineKeyboardButton(f"ü§ï {patient.get()['username']}",
                                                           callback_data=f"kickDoctorPatient|"
                                                                         f"{message['user'].get()['id']}|"
                                                                         f"{patient.get()['id']}"))
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ù£ –£ –í–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤', message['user'])
                # –õ–æ–º–∞–µ–º –±–ª–æ–∫
                break
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('ü§ï <b>–í–∞—à–∏ –ø–∞—Ü–∏–µ–Ω—Ç—ã:</b>', message['user'], reply=keyboard)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('leave'):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('üìõ <b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∫–∏–Ω—É—Ç—å —Å–≤–æ—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å?</b>\n–ü–æ—Å–ª–µ '
                        '—É–≤–æ–ª—å–Ω–µ–Ω–∏—è –≤—Å–µ –í–∞—à–∏ –∑–∞—Å–ª—É–≥–∏ –±—É–¥—É—Ç –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω—ã', message['user'], reply=apply)
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
            bot.register_next_step_handler(call, doctorHandler, message, 1)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('changePhoto'):
            # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            sendMessage('‚Äº <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b>\n–í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—ë–Ω –∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω. '
                        '–¢–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –∏–º–µ–µ—Ç —à–∞–Ω—Å –Ω–µ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É!\n –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é?', message['user'],
                        reply=apply)
            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ü–∏—é
            bot.register_next_step_handler(call, doctorHandler, message, 2)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('doctorKick'):
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.InlineKeyboardMarkup()
            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–µ
            if message['user'].getSubordinates():
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–º
                for doctor in message['user'].getSubordinates():
                    # –í–Ω–æ—Å–∏–º –≤—Ä–∞—á–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                    keyboard.add(
                        telebot.types.InlineKeyboardButton(f"üë®‚Äç‚öïÔ∏è {doctor.get()['username']}",
                                                           callback_data=f"kickDoctorDoctor|"
                                                                         f"{message['user'].get()['id']}|"
                                                                         f"{doctor.get()['id']}"))
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('üò• –£ –í–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö', message['user'])
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case():
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–∞—Ü–∏–µ–Ω—Ç–∞
def callCheckPatient(call: telebot.types.Message, message: dict):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(message['message']):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        if case('contactDoctor'):
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.InlineKeyboardMarkup()
            # –í—Ä–∞—á–∏
            doctors: List[Doctor] = []
            # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–∞—á–∞–º
            for user in getAllUserList():
                # –ï—Å–ª–∏ –ª–µ—á–∞—â–∏–π –≤—Ä–∞—á –∏ —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–µ –ø—É—Å—Ç
                if isinstance(user, Doctor) and user.getPatients():
                    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                    for patient in user.getPatients():
                        # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                        if patient.get()['id'] == message['user'].get()['id']:
                            # –í–Ω–æ—Å–∏–º –≤—Ä–∞—á–∞
                            doctors.append(user)
            # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç
            if doctors:
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–∞—á–∞–º
                for doctor in doctors:
                    # –í–Ω–æ—Å–∏–º –≤—Ä–∞—á–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                    keyboard.add(
                        telebot.types.InlineKeyboardButton(f"üë®‚Äç‚öïÔ∏è {doctor.get()['username']} "
                                                           f"[{doctor.get()['qualification']}]",
                                                           callback_data=f"callFromTo|{message['user'].get()['id']}|"
                                                                         f"{doctor.get()['id']}"))
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ù£ –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∞ –≤—Ä–∞—á–µ–±–Ω–æ–º —É—á—ë—Ç–µ', message['user'])
                # –õ–æ–º–∞–µ–º –±–ª–æ–∫
                break
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('üë®‚Äç‚öïÔ∏è <b>–í–∞—à–∏ –ª–µ—á–∞—â–∏–µ –≤—Ä–∞—á–∏:</b>', message['user'], reply=keyboard)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('anonContactDoctor'):
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫
            ram[message['user'].get()['id']] = {
                'type': 'system',
                'operation': Operations.AnonContactFind
            }
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('ü§ù –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–∏—Å–∫ –≤—Ä–∞—á–∞ –Ω–∞—á–∞—Ç!\n–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç',
                        message['user'], reply=cancel)
            # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
            for key in ram:
                # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫
                if (ram[key]['type'] == 'system' and 'operation' in ram[key] and
                        ram[key]['operation'] == Operations.AnonContactFind):
                    # –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ - –ø–∞—Ü–∏–µ–Ω—Ç
                    if isinstance(getUser(key), Doctor) or isinstance(getUser(int(key)), Doctor):
                        # –£–¥–∞–ª—è–µ–º –∏–∑ –ø–∞–º—è—Ç–∏
                        ram.pop(message['user'].get()['id'])
                        ram.pop(key)
                        # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–∞–∫—Ç
                        makeContactFixed(call, message['user'], getUser(key))
                        # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                        return None
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
            bot.register_next_step_handler(call, patientHandler, message)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('patientExtract'):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('‚ùó <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b>\n\n–í—Ä–∞—á–∏ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–ª–æ—â–∞–¥–∫–∏ –Ω–µ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏'
                        ' –∑–∞ –≤–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è.\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–ø–∏—Å–∫—É?',
                        message['user'], reply=apply)
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
            bot.register_next_step_handler(call, patientHandler, message, 1)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('patientDoctorKick'):
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.InlineKeyboardMarkup()
            # –í—Ä–∞—á–∏
            doctors: List[Doctor] = []
            # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–∞—á–∞–º
            for user in getAllUserList():
                # –ï—Å–ª–∏ –ª–µ—á–∞—â–∏–π –≤—Ä–∞—á –∏ —Å–ø–∏—Å–æ–∫ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–µ –ø—É—Å—Ç
                if isinstance(user, Doctor) and user.getPatients():
                    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                    for patient in user.getPatients():
                        # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                        if patient.get()['id'] == message['user'].get()['id']:
                            # –í–Ω–æ—Å–∏–º –≤—Ä–∞—á–∞
                            doctors.append(user)
            # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç
            if doctors:
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–∞—á–∞–º
                for doctor in doctors:
                    # –í–Ω–æ—Å–∏–º –≤—Ä–∞—á–∞ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                    keyboard.add(
                        telebot.types.InlineKeyboardButton(f"üë®‚Äç‚öïÔ∏è {doctor.get()['username']} "
                                                           f"[{doctor.get()['qualification']}]",
                                                           callback_data=f"kickPatientDoctor|"
                                                                         f"{message['user'].get()['id']}|"
                                                                         f"{doctor.get()['id']}"))
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ù£ –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∞ –≤—Ä–∞—á–µ–±–Ω–æ–º —É—á—ë—Ç–µ', message['user'])
                # –õ–æ–º–∞–µ–º –±–ª–æ–∫
                break
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('üë®‚Äç‚öïÔ∏è <b>–í–∞—à–∏ –ª–µ—á–∞—â–∏–µ –≤—Ä–∞—á–∏:</b>', message['user'], reply=keyboard)
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case():
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline –∑–∞–ø—Ä–æ—Å–æ–≤ –∞–¥–º–∏–Ω–∞
def callCheckAdmin(call: telebot.types.Message, message: dict):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(message['message']):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        if case('makeAdmin'):
            # –ï—Å–ª–∏ —Ä–∞–Ω–≥ –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω
            if Admin(message['user']).getAdmin()['level'] >= 4:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('ü§î –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –µ–≥–æ ID –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω—ã',
                            message['user'], reply=telebot.types.ReplyKeyboardRemove())
                # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ —Ñ—É–Ω–∫—Ü–∏—é
                bot.register_next_step_handler(call, adminHandler, message)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –í–∞—à —Ä–∞–Ω–≥ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω!', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('contactUser'):
            # –ï—Å–ª–∏ —Ä–∞–Ω–≥ –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω
            if Admin(message['user']).getAdmin()['level'] >= 1:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('ü§î –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –µ–≥–æ ID –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞',
                            message['user'], reply=cancel)
                # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ —Ñ—É–Ω–∫—Ü–∏—é
                bot.register_next_step_handler(call, adminHandler, message, 1)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –í–∞—à —Ä–∞–Ω–≥ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω!', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('removeAdmin'):
            # –ï—Å–ª–∏ —Ä–∞–Ω–≥ –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω
            if Admin(message['user']).getAdmin()['level'] >= 3:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('ü§î –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –µ–≥–æ ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω–æ–≤',
                            message['user'], reply=cancel)
                # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ —Ñ—É–Ω–∫—Ü–∏—é
                bot.register_next_step_handler(call, adminHandler, message, 2)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –í–∞—à —Ä–∞–Ω–≥ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω!', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case('removeDoctor'):
            # –ï—Å–ª–∏ —Ä–∞–Ω–≥ –¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω
            if Admin(message['user']).getAdmin()['level'] >= 2:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('ü§î –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –µ–≥–æ ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –≤—Ä–∞—á–µ–π',
                            message['user'], reply=cancel)
                # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ —Ñ—É–Ω–∫—Ü–∏—é
                bot.register_next_step_handler(call, adminHandler, message, 3)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –í–∞—à —Ä–∞–Ω–≥ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω!', message['user'],
                            reply=telebot.types.ReplyKeyboardRemove())
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break
        elif case():
            # –õ–æ–º–∞–µ–º –±–ª–æ–∫
            break


# –ö–∞–±–∏–Ω–µ—Ç –ª–µ—á–µ–Ω–∏—è
def healCabinet(message: telebot.types.Message, doctor: Doctor, patient: Patient, step: int = 0):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(step):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        if case(0):
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(
                telebot.types.InlineKeyboardButton("üíå –í—ã–ø–∏—Å–∞—Ç—å",
                                                   callback_data=f"healCabinet|{doctor.get()['id']}|"
                                                                 f"{patient.get()['id']}|1"),
                telebot.types.InlineKeyboardButton("üìÉ –û–ø—Ä–æ—Å–Ω–∏–∫–∏",
                                                   callback_data=f"healCabinet|{doctor.get()['id']}|"
                                                                 f"{patient.get()['id']}|2"),
            )
            keyboard.add(
                telebot.types.InlineKeyboardButton("ü§ñ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ò–ò | –ü—Ä–æ–≥–Ω–æ–∑",
                                                   callback_data=f"healCabinet|{doctor.get()['id']}|"
                                                                 f"{patient.get()['id']}|3"),
                telebot.types.InlineKeyboardButton("ü§ñ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ò–ò | –î–∏–∞–≥–Ω–æ–∑",
                                                   callback_data=f"healCabinet|{doctor.get()['id']}|"
                                                                 f"{patient.get()['id']}|4"),
            )
            keyboard.add(
                telebot.types.InlineKeyboardButton("ü§ñ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ò–ò | –õ–µ—á–µ–Ω–∏–µ",
                                                   callback_data=f"healCabinet|{doctor.get()['id']}|"
                                                                 f"{patient.get()['id']}|5")
            )
            keyboard.add(
                telebot.types.InlineKeyboardButton("‚ùå –°–≤–µ—Ä–Ω—É—Ç—å", callback_data=f"hide")
            )
            # –ò—Å—Ç–æ—Ä–∏—è –±–æ–ª–µ–∑–Ω–∏
            history: str = (f"üöë <b>–ò—Å—Ç–æ—Ä–∏—è –±–æ–ª–µ–∑–Ω–∏:</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {patient.get()['username']}\n–í–æ–∑—Ä–∞—Å—Ç: "
                            f"{patient.get()['age']}\n")
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª
            if bool(patient.get()['sex']):
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª
                history += f'–ü–æ–ª: üë® –ú—É–∂—Å–∫–æ–π\n'
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª
                history += f'–ü–æ–ª: üë© –ñ–µ–Ω—Å–∫–∏–π\n'
            # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            if 'phone' in patient.get() and patient.get()['phone'] is not None:
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                history += f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {patient.get()['phone']}'
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –±–æ–ª–µ–∑–Ω–∏
            if patient.getHistory() is not None:
                # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—ã
                if patient.getHistory().predict != 'undefined':
                    # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑
                    history += f'–ü—Ä–æ–≥–Ω–æ–∑: {patient.getHistory().predict}\n'
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–Ω–∞–ª–∏–∑—ã
                if patient.getHistory().analyzes != 'undefined':
                    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑—ã
                    history += f'–ê–Ω–∞–ª–∏–∑—ã: {patient.getHistory().analyzes}\n'
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∂–∞–ª–æ–±—ã
                if patient.getHistory().complaints != 'undefined':
                    # –î–æ–±–∞–≤–ª—è–µ–º –∂–∞–ª–æ–±—ã
                    history += f'–ñ–∞–ª–æ–±—ã: {patient.getHistory().complaints}\n'
                # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
                if patient.getHistory().description != 'undefined':
                    # –î–æ–±–∞–≤–ª—è–µ–º –∂–∞–ª–æ–±—ã
                    history += f'–ò—Å—Ç–æ—Ä–∏—è: {patient.getHistory().description}\n'
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π
                if patient.getHistory().medicines:
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                    history += f'\n<b>–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã:</b>\n'
                    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –º–µ–¥–µ–∫–∞–º–µ–Ω—Ç–∞–º
                    for medic in range(0, len(patient.getHistory().medicines)):
                        # –í–Ω–æ—Å–∏–º –ª–µ–∫–∞—Ä—Å—Ç–≤–æ
                        history += f'{medic}. {patient.getHistory().medicines[medic]}\n'
                    # –í–Ω–æ—Å–∏–º –æ—Ç—Å—Ç—É–ø
                    history += '\n'
                # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∏–∞–≥–Ω–æ–∑—ã
                if patient.getHistory().diagnoses:
                    # –ò—Ç—Ç–µ—Ä–∞—Ç–æ—Ä
                    itterator: int = 0
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                    history += f'\n<b>–î–∏–∞–≥–Ω–æ–∑—ã:</b>\n'
                    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –¥–∏–∞–≥–Ω–æ–∑–∞–º
                    for diagnosis in patient.getHistory().diagnoses:
                        # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∏—Ç—Ç–µ—Ä–∞—Ç–æ—Ä
                        itterator += 1
                        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π
                        if diagnosis.neuralnetwork:
                            # –í–Ω–æ—Å–∏–º –¥–∏–∞–≥–Ω–æ–∑
                            history += (f'{itterator}. <b>{diagnosis.title}</b>\n{diagnosis.description}\n'
                                        f'<b>–î–∏–∞–≥–Ω–æ–∑ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é!</b>\n')
                        else:
                            # –í–Ω–æ—Å–∏–º –¥–∏–∞–≥–Ω–æ–∑
                            history += f'{itterator}. <b>{diagnosis.title}</b>\n{diagnosis.description}'
                    # –í–Ω–æ—Å–∏–º –æ—Ç—Å—Ç—É–ø
                    history += '\n'
            # –í—Ä–∞—á–∏
            doctors: List[Doctor] = []
            # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
            for user in getAllUserList():
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Ä–∞—á –∏ —É –Ω–µ–≥–æ –µ—Å—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç—ã
                if isinstance(user, Doctor) and user.getPatients():
                    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                    for patientUser in user.getPatients():
                        # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                        if patientUser.get()['id'] == patient.get()['id']:
                            # –í–Ω–æ—Å–∏–º –≤—Ä–∞—á–∞
                            doctors.append(user)
                            # –õ–æ–º–∞–µ–º –∏—Ç—Ç–µ—Ä–∞—Ü–∏—é
                            break
            # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–∞—á–∏
            if doctors:
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
                history += f'\n<b>–õ–µ—á–∞—â–∏–µ –≤—Ä–∞—á–∏:</b>\n'
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–∞—á–∞–º
                for i in range(0, len(doctors)):
                    # –í–Ω–æ—Å–∏–º –≤—Ä–∞—á–∞
                    history += (f'{i+1}. [{doctors[i].get()["id"]}] {doctors[i].get()["username"]} '
                                f'[{doctors[i].get()["qualification"]}]\n')
                # –í–Ω–æ—Å–∏–º –æ—Ç—Å—Ç—É–ø
                history += '\n'
            # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–µ–º—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –∏—Å—Ç–æ—Ä–∏—è –±–æ–ª–µ–∑–Ω–∏ –∑–∞–≤–µ–¥–µ–Ω–∞
            if patient.getHistory().assigned is not None and patient.getHistory() is not None:
                # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
                history += (f'–í—Ä–µ–º—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è: {patient.getHistory().assigned.day}.'
                            f'{patient.getHistory().assigned.month}.{patient.getHistory().assigned.year}')
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage(history, doctor, reply=keyboard)
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break
        elif case(1):
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break
        elif case(2):
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break
        elif case(3):
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break
        elif case(4):
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break
        elif case(5):
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break
        elif case():
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline –∑–∞–ø—Ä–æ—Å–æ–≤
@bot.callback_query_handler(func=lambda call: True)
def callCheck(call: telebot.types.CallbackQuery, defaultArgs: List[str] = None):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.delete_message(call.message.chat.id, call.message.id)
    # –£–∫–∞–∑—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    defaultArgs = defaultArgs or ["sendSelfLink", "callFromTo", "kickPatientDoctor",
                                  "kickDoctorPatient", "kickDoctorDoctor", "healCabinet"]
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user: Union[Patient, Doctor, type(None)] = None
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = getUser(int(call.data.split('|')[1]))
    except Exception:
        pass
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω
    if user is not None and user.isExsist():
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message: dict = {
            'user': user,
            'message': call.data.split('|')[0],
            'params': call.data.split('|')[1:]
        }
        # –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω –æ–±—â–∏–π –∑–∞–ø—Ä–æ—Å
        if message['message'] in defaultArgs:
            # –†–∞—Å–ø–æ–∑–Ω–∞—ë–º callback
            for case in Switch(message['message']):
                if case(defaultArgs[0]):
                    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage(f'ü§ù –í–∞—à–∞ —Å—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:\n\nt.me/{bot.get_me().username}?start='
                                f'{user.get()["id"]}', message['user'])
                    # –õ–æ–º–∞–µ–º —Ü–∏–∫–ª
                    break
                elif case(defaultArgs[1]):
                    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if getUser(int(message['params'][1])) is not None:
                        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–≤—è–∑—å
                        makeContactFixed(sendMessage('‚úî –ö–æ–Ω—Ç–∞–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', message['user']),
                                         message['user'], getUser(int(message['params'][1])))
                    else:
                        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage(f'‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {message['params'][1]} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!',
                                    message['user'])
                    # –õ–æ–º–∞–µ–º —Ü–∏–∫–ª
                    break
                elif case(defaultArgs[2]):
                    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –æ–Ω - –≤—Ä–∞—á
                    if (getUser(int(message['params'][1])) is not None and
                            isinstance(getUser(int(message['params'][1])), Doctor)):
                        # –û—Ç–∫–∞–∑—ã–≤–∞–µ–º—Å—è –æ—Ç –≤—Ä–∞—á–∞
                        getUser(int(message['params'][1])).update(Doctor.Types.patients, message['user'])
                        # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                        sendMessage(f'‚úî –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –≤—Ä–∞—á–∞ —Å ID {message['params'][1]}', message['user'])
                        sendMessage(f'üí• –û—Ç –í–∞—Å –æ—Ç–∫–∞–∑–∞–ª—Å—è –ø–∞—Ü–∏–µ–Ω—Ç {message["user"].get()["username"]}',
                                    getUser(int(message['params'][1])))
                    else:
                        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage(f'‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {message['params'][1]} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!',
                                    message['user'])
                    # –õ–æ–º–∞–µ–º —Ü–∏–∫–ª
                    break
                elif case(defaultArgs[3]):
                    # –ï—Å–ª–∏ –ø–∞—Ü–∏–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if (getUser(int(message["params"][1])) is not None and
                            isinstance(getUser(int(message["params"][1])), Patient)):
                        # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                        for patient in message['user'].getPatients():
                            # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                            if getUser(int(message["params"][1])).get()['id'] == patient.get()['id']:
                                # –£–¥–∞–ª—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
                                message['user'].update(Doctor.Types.patients, getUser(int(message["params"][1])))
                                # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                                sendMessage(f'‚úî –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –ª–µ—á–µ–Ω–∏—è {getUser(int(message["params"][1]))
                                            .get()["username"]}', message['user'])
                                sendMessage(f'üí• –û—Ç –í–∞—Å –æ—Ç–∫–∞–∑–∞–ª—Å—è –¥–æ–∫—Ç–æ—Ä {message["user"].get()["username"]}',
                                            getUser(int(message["params"][1])))
                                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                                return None
                    # –õ–æ–º–∞–µ–º —Ü–∏–∫–ª
                    break
                elif case(defaultArgs[4]):
                    # –ï—Å–ª–∏ –≤—Ä–∞—á —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if (getUser(int(message["params"][1])) is not None and
                            isinstance(getUser(int(message["params"][1])), Doctor) and
                            message['user'].getSubordinates()):
                        # –í—Ä–∞—á
                        kicked: Doctor = None
                        # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–∞—á–∞–º
                        for doctor in message['user'].getSubordinates():
                            # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                            if doctor.get()['id'] == getUser(int(message["params"][1])).get()['id']:
                                # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Ä–∞—á–∞
                                kicked = doctor
                        # –£–¥–∞–ª—è–µ–º –≤—Ä–∞—á–∞
                        message['user'].update(Doctor.Types.subordinates, kicked)
                        # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                        sendMessage(f'üò• –í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –¥–æ–∫—Ç–æ—Ä–∞ {kicked.get()["username"]}', message['user'])
                        sendMessage(f'üí• –û—Ç –í–∞—Å –æ—Ç–∫–∞–∑–∞–ª—Å—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å {message['user'].get()["username"]}',
                                    message['user'])
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('üò• –£ –í–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö', message['user'])
                    # –õ–æ–º–∞–µ–º —Ü–∏–∫–ª
                    break
                elif case(defaultArgs[5]):
                    # –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä –∫–æ–ª–ª–±—ç–∫–∞ - –≤—Ä–∞—á
                    if isinstance(message['user'], Doctor):
                        # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞–º
                        for patient in message['user'].getPatients():
                            # –ï—Å–ª–∏ –ø–∞—Ü–∏–µ–Ω—Ç –ø—Ä–∏—Å–≤–æ–µ–Ω –≤—Ä–∞—á—É –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                            if patient.get()['id'] == getUser(int(message['params'][1])).get()['id']:
                                # –ï—Å–ª–∏ –Ω–µ—Ç—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
                                if len(message['params']) < 3:
                                    # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ—É–Ω–∫—Ü–∏—é
                                    healCabinet(call, message['user'], getUser(int(message['params'][1])))
                                else:
                                    # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ—É–Ω–∫—Ü–∏—é
                                    healCabinet(call, message['user'], getUser(int(message['params'][1])),
                                                int(message['params'][2]))
                                # –õ–æ–º–∞–µ–º –∏—Ç—Ç–µ—Ä–∞—Ü–∏—é
                                return None
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é - —ç—Ç–æ –Ω–µ –≤–∞—à –ø–∞—Ü–∏–µ–Ω—Ç!',
                                    message['user'])
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é - –≤—ã –Ω–µ –≤—Ä–∞—á!', message['user'])
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
            return None
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
        if Admin(user).getAdmin() is not None:
            # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä
            callCheckAdmin(call.message, message)
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–∞—Ü–∏–µ–Ω—Ç
        if isinstance(user, Patient):
            # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä
            callCheckPatient(call.message, message)
        elif isinstance(user, Doctor):
            # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä
            callCheckDoctor(call.message, message)


'''
======================================
        –°–ò–°–¢–ï–ú–ù–´–ï –§–£–ù–ö–¶–ò–ò –ë–û–¢–ê        
======================================
'''


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def sendMessage(message: str, to: Union[Patient, Doctor, int], self: Union[Patient, Doctor, str, None] = None,
                reply: Union[telebot.types.InlineKeyboardMarkup, telebot.types.ReplyKeyboardMarkup,
                telebot.types.ReplyKeyboardRemove(), type(None)] = None, photo: Union[bytes, type(None)] = None,
                parse_mode: str = 'html') -> telebot.types.Message:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
    if isinstance(self, Patient) or isinstance(self, Doctor):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
        if isinstance(to, Patient) or isinstance(to, Doctor):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–∑—ã–∫–∞
            if self.get()['lang'] == to.get()['lang']:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if photo is None:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        return bot.send_message(to.get()['id'], message, parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        return bot.send_message(to.get()['id'], message, parse_mode, reply_markup=reply)
                else:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        return bot.send_photo(to.get()['id'], photo, message, parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        return bot.send_photo(to.get()['id'], photo, message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if photo is None:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        return bot.send_message(to.get()['id'],
                                                GoogleTranslator(source='auto', target=to.get()['lang']).translate(
                                                    message),
                                                parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        return bot.send_message(to.get()['id'],
                                                GoogleTranslator(source='auto', target=to.get()['lang']).translate(
                                                    message),
                                                parse_mode, reply_markup=reply)
                else:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        return bot.send_photo(to.get()['id'], photo,
                                              GoogleTranslator(source='auto', target=to.get()['lang']).translate(
                                                  message),
                                              parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        return bot.send_photo(to.get()['id'], photo,
                                              GoogleTranslator(source='auto', target=to.get()['lang']).translate(
                                                  message),
                                              parse_mode, reply_markup=reply)
        elif isinstance(to, int):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
            if photo is None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return bot.send_message(to, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return bot.send_message(to, message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    return bot.send_photo(to, photo, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    return bot.send_photo(to, photo, message, parse_mode, reply_markup=reply)
    elif isinstance(self, type(None)):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
        if isinstance(to, Patient) or isinstance(to, Doctor):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
            if photo is None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return bot.send_message(to.get()['id'], message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return bot.send_message(to.get()['id'], message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    return bot.send_photo(to.get()['id'], photo, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    return bot.send_photo(to.get()['id'], photo, message, parse_mode, reply_markup=reply)
        elif isinstance(to, int):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
            if photo is None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return bot.send_message(to, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return bot.send_message(to, message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    return bot.send_photo(to, photo, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    return bot.send_photo(to, photo, message, parse_mode, reply_markup=reply)
    elif isinstance(self, str):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
        if isinstance(to, Patient) or isinstance(to, Doctor):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–∑—ã–∫–∞
            if self == to.get()['lang']:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if photo is None:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        return bot.send_message(to.get()['id'], message, parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        return bot.send_message(to.get()['id'], message, parse_mode, reply_markup=reply)
                else:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        return bot.send_photo(to.get()['id'], photo, message, parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        return bot.send_photo(to.get()['id'], photo, message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if photo is None:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        return bot.send_message(to.get()['id'],
                                                GoogleTranslator(source='auto', target=to.get()['lang']).translate(
                                                    message),
                                                parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        return bot.send_message(to.get()['id'],
                                                GoogleTranslator(source='auto', target=to.get()['lang']).translate(
                                                    message),
                                                parse_mode, reply_markup=reply)
                else:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        return bot.send_photo(to.get()['id'], photo,
                                              GoogleTranslator(source='auto', target=to.get()['lang']).translate(
                                                  message),
                                              parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        return bot.send_photo(to.get()['id'], photo,
                                              GoogleTranslator(source='auto', target=to.get()['lang']).translate(
                                                  message),
                                              parse_mode, reply_markup=reply)
        elif isinstance(to, int):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
            if photo is None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return bot.send_message(to, GoogleTranslator(source='auto', target=self).translate(message),
                                            parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    return bot.send_message(to, GoogleTranslator(source='auto', target=self).translate(message),
                                            parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    return bot.send_photo(to, photo, GoogleTranslator(source='auto', target=self).translate(message),
                                          parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    return bot.send_photo(to, photo, GoogleTranslator(source='auto', target=self).translate(message),
                                          parse_mode, reply_markup=reply)


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Ä–∞—á–∞
def registerDoctor(message, step: int = 0):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for case in Switch(step):
        if case(0):
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é
            ram[message.from_user.id]['qualification'] = message.text
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            ram[message.from_user.id]['document'] = None
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage("‚úî –ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞",
                        message.chat.id, ram[message.from_user.id]['lang'], reply=telebot.types.ReplyKeyboardRemove())
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è
            if stringToBool(os.getenv('VERIFY')):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("üìë –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–º.\n–î–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é. "
                            "–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞", message.chat.id,
                            ram[message.from_user.id]['lang'])
            else:
                # –°–æ–∑–¥–∞—ë–º –∞–∫–∫–∞—É–Ω—Ç
                Doctor(message.from_user.id).create(ram[message.from_user.id]['name'],
                                                    ram[message.from_user.id]['qualification'],
                                                    ram[message.from_user.id]['document'],
                                                    ram[message.from_user.id]['lang'],
                                                    ram[message.from_user.id]['phone'])
                # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                ram.pop(message.from_user.id)
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚úî –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!', message.chat.id,
                            getUser(message.from_user.id), reply=telebot.types.ReplyKeyboardRemove())
        # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        break
    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    return None


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞
def registerPatient(message, step: int = 0, invited: Doctor = None):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for case in Switch(step):
        if case(0):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
            if checkInt(message.text):
                ram[message.from_user.id]['age'] = int(message.text)
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("üòê –û—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                            message.chat.id, ram[message.from_user.id]['lang'],
                            reply=telebot.types.ReplyKeyboardRemove())
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('üîû –£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç', message.chat.id, ram[message.from_user.id]['lang'])
                # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–∞—á
                if invited is not None:
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, registerPatient, 0, invited)
                    break
                else:
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, registerPatient)
                    break
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(telebot.types.KeyboardButton(text="üë® –ú—É–∂—Å–∫–æ–π"),
                         telebot.types.KeyboardButton(text="üë© –ñ–µ–Ω—Å–∫–∏–π"))
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('ü§î –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª', message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
            bot.register_next_step_handler(message, registerPatient, 1)
            break
        elif case(1):
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª
            ram[message.from_user.id]['sex'] = '–º—É–∂—Å–∫–æ–π' in message.text.lower()
            try:
                # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                patient: Patient = Patient(message.from_user.id)
                # –°–æ–∑–¥–∞—ë–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
                patient.create(ram[message.from_user.id]['name'],
                               ram[message.from_user.id]['age'],
                               ram[message.from_user.id]['sex'], invited,
                               ram[message.from_user.id]['lang'],
                               ram[message.from_user.id]['phone'])
                # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π
                if invited is not None:
                    # –°–æ–∑–¥–∞—ë–º –∏—Å—Ç–æ—Ä–∏—é
                    patient.createHistory([invited])
                else:
                    # –°–æ–∑–¥–∞—ë–º –∏—Å—Ç–æ—Ä–∏—é
                    patient.createHistory()
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚úî –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!', message.chat.id,
                            ram[message.from_user.id]['lang'], reply=telebot.types.ReplyKeyboardRemove())
            except Exception as e:
                # –£–¥–∞–ª—è–µ–º –∞–∫–∫–∞—É–Ω—Ç
                getUser(message.chat.id).extract()
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n\nüí¨ –û—à–∏–±–∫–∞: {e}', message.chat.id,
                            ram[message.from_user.id]['lang'], reply=telebot.types.ReplyKeyboardRemove())
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            ram.pop(message.from_user.id)
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break
    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    return None


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def register(message, step: int = -1, invited: Doctor = None):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        for case in Switch(step):
            if case(-1):
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if message.text.lower().split()[1] in ['—Ä—É—Å—Å–∫–∏–π', 'english', '–±–µ–ª–∞—Ä—É—Å–∫—ñ', '‰∏≠Êñá']:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
                    for elem in Switch(message.text.lower().split()[1]):
                        if elem('—Ä—É—Å—Å–∫–∏–π'):
                            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
                            ram[message.from_user.id] = {'lang': 'ru'}
                            break
                        elif elem('english'):
                            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
                            ram[message.from_user.id] = {'lang': 'en'}
                            break
                        elif elem('–±–µ–ª–∞—Ä—É—Å–∫—ñ'):
                            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
                            ram[message.from_user.id] = {'lang': 'by'}
                            break
                        elif elem('‰∏≠Êñá'):
                            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
                            ram[message.from_user.id] = {'lang': 'zh'}
                            break
                        elif elem():
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            sendMessage("üòê –û—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                                        message.chat.id, reply=telebot.types.ReplyKeyboardRemove())
                            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                            keyboard.add(telebot.types.KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
                                         telebot.types.KeyboardButton(text="üá∫üá∏ English"))
                            keyboard.add(telebot.types.KeyboardButton(text="üáßüáæ –ë–µ–ª–∞—Ä—É—Å–∫—ñ"),
                                         telebot.types.KeyboardButton(text="üá®üá≥ ‰∏≠Êñá"))
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            sendMessage('‚ùó –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', message.chat.id, getUser(message.from_user.id),
                                        reply=keyboard)
                            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                            bot.register_next_step_handler(message, register, invited)
                            break
                    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    keyboard.add(telebot.types.KeyboardButton(text="‚úî –î–∞"),
                                 telebot.types.KeyboardButton(text="‚ùå –ù–µ—Ç"))
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω.\nüòâ –•–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?",
                                message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, register, 0)
                    break
            elif case(0):
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if message.text.lower().split()[1] in ['–¥–∞', '–Ω–µ—Ç']:
                    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π
                    if '–¥–∞' in message.text.lower():
                        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                        keyboard.add(telebot.types.KeyboardButton(text="ü§ï –ü–∞—Ü–∏–µ–Ω—Ç–∞"),
                                     telebot.types.KeyboardButton(text="üë®‚Äç‚öïÔ∏è –í—Ä–∞—á–∞"))
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage("üòâ –û—Ç–ª–∏—á–Ω–æ! –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫...",
                                    message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                        bot.register_next_step_handler(message, register, 1)
                        break
                    else:
                        # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                        ram.pop(message.from_user.id)
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage("üíî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
                                    message.chat.id, getUser(message.from_user.id),
                                    reply=telebot.types.ReplyKeyboardRemove())
                        # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                        break
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("üòê –û—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                                message.chat.id, ram[message.from_user.id]['lang'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, register, 0)
            elif case(1):
                # –°–æ–æ–±—â–µ–Ω–∏–µ
                msg: str = "% –ù–∞—á–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∫ $\n–£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if message.text.lower().split()[1] in ['–≤—Ä–∞—á–∞', '–ø–∞—Ü–∏–µ–Ω—Ç–∞']:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                    if '–≤—Ä–∞—á' in message.text.lower():
                        # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        ram[message.from_user.id]['type'] = "doctor"
                        # –ú–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        msg = msg.replace('%', 'üë®‚Äç‚öïÔ∏è')
                        msg = msg.replace('$', '–≤—Ä–∞—á–∞')
                    else:
                        # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        ram[message.from_user.id]['type'] = "patient"
                        # –ú–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        msg = msg.replace('%', 'ü§ï')
                        msg = msg.replace('$', '–ø–∞—Ü–∏–µ–Ω—Ç–∞')
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("üòê –û—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                                message.chat.id, ram[message.from_user.id]['lang'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, register, 1)
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(telebot.types.KeyboardButton(text="‚úî –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç Telegram"))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(msg, message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                bot.register_next_step_handler(message, register, 2)
                break
            elif case(2):
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if '–æ—Å—Ç–∞–≤–∏—Ç—å' in message.text.lower():
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    ram[message.from_user.id]['name'] = message.from_user.first_name
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    ram[message.from_user.id]['name'] = message.text
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(telebot.types.KeyboardButton(text="‚ùå –ù–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å"))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('üì± –û—Å—Ç–∞–≤–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞?',
                            message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                bot.register_next_step_handler(message, register, 3)
                break
            elif case(3):
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if checkInt(message.text):
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                    ram[message.from_user.id]['phone'] = int(message.text)
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚úî –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω!', message.chat.id,
                                ram[message.from_user.id]['lang'])
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                    ram[message.from_user.id]['phone'] = 0
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
                if ram[message.from_user.id]['type'] == 'patient':
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('üîû –£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç', message.chat.id, ram[message.from_user.id]['lang'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–∞—á
                    if invited is not None:
                        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                        bot.register_next_step_handler(message, registerPatient, 0, invited)
                        break
                    else:
                        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                        bot.register_next_step_handler(message, registerPatient)
                        break
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('ü§î –£–∫–∞–∂–∏—Ç–µ –≤—Ä–∞—á–µ–±–Ω—É—é –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é',
                                message.chat.id, ram[message.from_user.id]['lang'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, registerDoctor)
                    break
    except Exception:
        pass
    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    return None


# –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
def profile(message):
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user: Union[Patient, Doctor, type(None)] = getUser(message.from_user.id)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if isinstance(user, Doctor):
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(
            telebot.types.InlineKeyboardButton("üïµ –ü—Ä–∏–Ω–∏–º–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ",
                                               callback_data=f"doctorAnonim|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("ü§î –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞",
                                               callback_data=f"patient|{user.get()['id']}"),
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("üîÅ –°–º–µ–Ω–∞ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏",
                                               callback_data=f"qualification|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("üíî –£–≤–æ–ª–∏—Ç—å—Å—è", callback_data=f"leave|{user.get()['id']}")
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("ü§ï –û—Ç–∫–∞–∑ –æ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞",
                                               callback_data=f"patientKick|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("üìë –°–º–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
                                               callback_data=f"changePhoto|{user.get()['id']}")
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("üíî –£–≤–æ–ª–∏—Ç—å –ø–æ–¥—á–∏–Ω—ë–Ω–Ω–æ–≥–æ",
                                               callback_data=f"doctorKick|{user.get()['id']}")
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("ü§ù –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ",
                                               callback_data=f'sendSelfLink|{user.get()['id']}')
        )
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–ª–µ—á–µ–Ω–Ω—ã–µ
        if user.get()["discharged"] is not None:
            # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω
            if 'phone' in user.get() and user.get()['phone'] is not None:
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
                if user.get()['document'] is not None:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {user.get()["phone"]}\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: '
                                f'{user.get()["qualification"]}'
                                f'\n–í—ã–ª–µ—á–µ–Ω–Ω—ã–µ: {user.get()["discharged"]}', message.chat.id, user,
                                photo=user.get()['document'], reply=keyboard)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {user.get()["phone"]}\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: '
                                f'{user.get()["qualification"]}\n–í—ã–ª–µ—á–µ–Ω–Ω—ã–µ: {user.get()["discharged"]}',
                                message.chat.id, user, reply=keyboard)
            else:
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
                if user.get()['document'] is not None:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:/<b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {user.get()["qualification"]}\n'
                                f'–í—ã–ª–µ—á–µ–Ω–Ω—ã–µ: {user.get()["discharged"]}',
                                message.chat.id, user, photo=user.get()['document'], reply=keyboard)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {user.get()["qualification"]}\n'
                                f'–í—ã–ª–µ—á–µ–Ω–Ω—ã–µ: {user.get()["discharged"]}',
                                message.chat.id, user, reply=keyboard)
        else:
            # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω
            if 'phone' in user.get() and user.get()['phone'] is not None:
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
                if user.get()['document'] is not None:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {user.get()["phone"]}\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: '
                                f'{user.get()["qualification"]}', message.chat.id, user,
                                photo=user.get()['document'],
                                reply=keyboard)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {user.get()["document"]}\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: '
                                f'{user.get()["qualification"]}', message.chat.id, user, reply=keyboard)
            else:
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
                if user.get()['document'] is not None:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:/<b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {user.get()["qualification"]}',
                                message.chat.id, user, photo=user.get()['document'], reply=keyboard)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {user.get()["qualification"]}',
                                message.chat.id, user, reply=keyboard)
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–µ
        if user.getSubordinates():
            # –°–æ–æ–±—â–µ–Ω–∏–µ
            msg: str = f'üë®‚Äç‚öïÔ∏è –ü–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–µ: '
            # –ü–µ—Ä–µ–±–æ—Ä –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö
            for doctor in user.getSubordinates():
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg += f"[{doctor.get()['id']}] {doctor.get()['username']}, "
            # –û—Ç—Å—ã–ª–∞–µ–º –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö
            sendMessage(msg[:-1], message.chat.id, user)
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç—ã
        if user.getPatients():
            # –°–æ–æ–±—â–µ–Ω–∏–µ
            msg: str = f'ü§ï –ü–∞—Ü–∏–µ–Ω—Ç—ã: '
            # –ü–µ—Ä–µ–±–æ—Ä –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö
            for patient in user.getPatients():
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg += f"[{patient.get()['id']}] {patient.get()['username']}, "
            # –û—Ç—Å—ã–ª–∞–µ–º –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö
            sendMessage(msg[:-1], message.chat.id, user)
    elif isinstance(user, Patient):
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(
            telebot.types.InlineKeyboardButton("üí¨ –°–≤—è–∑—å —Å –≤—Ä–∞—á–æ–º",
                                               callback_data=f"contactDoctor|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("üïµ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø—Ä–∏—ë–º",
                                               callback_data=f"anonContactDoctor|{user.get()['id']}")
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("‚ù£ –í—ã–ø–∏—Å–∞—Ç—å—Å—è",
                                               callback_data=f"patientExtract|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("üíî –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –≤—Ä–∞—á–∞",
                                               callback_data=f"patientDoctorKick|{user.get()['id']}"),
        )
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω
        if 'phone' in user.get():
            # –ï—Å–ª–∏ –º—É–∂—Å–∫–æ–π –ø–æ–ª
            if user.get()['sex']:
                # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –ü–∞—Ü–∏–µ–Ω—Ç\n–ò–º—è: {user.get()["username"]}'
                            f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–í–æ–∑—Ä–∞—Å—Ç: {user.get()["age"]}\n–ü–æ–ª: üë® –ú—É–∂—Å–∫–æ–π',
                            message.chat.id, user, reply=keyboard)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –ü–∞—Ü–∏–µ–Ω—Ç\n–ò–º—è: {user.get()["username"]}'
                            f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–í–æ–∑—Ä–∞—Å—Ç: {user.get()["age"]}\n–ü–æ–ª: üë© –ñ–µ–Ω—Å–∫–∏–π',
                            message.chat.id, user, reply=keyboard)
        else:
            # –ï—Å–ª–∏ –º—É–∂—Å–∫–æ–π –ø–æ–ª
            if user.get()['sex']:
                # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –ü–∞—Ü–∏–µ–Ω—Ç\n–ò–º—è: {user.get()["username"]}'
                            f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–í–æ–∑—Ä–∞—Å—Ç: {user.get()["age"]}\n–ü–æ–ª: üë® –ú—É–∂—Å–∫–æ–π',
                            message.chat.id, user, reply=keyboard)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –ü–∞—Ü–∏–µ–Ω—Ç\n–ò–º—è: {user.get()["username"]}'
                            f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–í–æ–∑—Ä–∞—Å—Ç: {user.get()["age"]}\n–ü–æ–ª: üë© –ñ–µ–Ω—Å–∫–∏–π',
                            message.chat.id, user, reply=keyboard)
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –±–æ–ª–µ–∑–Ω–∏
        if user.getHistory() is not None:
            # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            history: History = user.getHistory()
            # –°–æ–æ–±—â–µ–Ω–∏–µ
            msg: str = f'ü§ï <b>–ò—Å—Ç–æ—Ä–∏—è –±–æ–ª–µ–∑–Ω–∏:</b>\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {history.description}\n–ñ–∞–ª–æ–±—ã: '
            f'{history.complaints}\n–ò—Å—Ç–æ—Ä–∏—è –∑–∞–≤–µ–¥–µ–Ω–∞: {history.assigned}'
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–Ω–∞–ª–∏–∑—ã
            if history.analyzes != 'undefined':
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg += f'\n–ê–Ω–∞–ª–∏–∑—ã: {history.analyzes}'
            # –ï—Å–ª–∏ –µ—Å—Ç—å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã
            if history.medicines != 'undefined':
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg += f'\n–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã: {history.medicines}'
            # –û—Ç—Å—ã–ª–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            sendMessage(msg, message.chat.id, user)
            # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∏–∞–≥–Ω–æ–∑—ã
            if history.diagnoses:
                # –°–æ–æ–±—â–µ–Ω–∏–µ
                msg: str = f"‚ù£ <b>–î–∏–∞–≥–Ω–æ–∑—ã:</b>\n\n–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: {history.predict}\n–í—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∏–∞–≥–Ω–æ–∑—ã:"
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å–ø–∏—Å–∫—É
                for diagnose in history.diagnoses:
                    # –ï—Å–ª–∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é
                    if diagnose.neuralnetwork:
                        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        msg += (f'\n¬∑ <b>{diagnose.title}</b>\n{diagnose.description}\nü§ñ '
                                f'–í—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é!')
                    else:
                        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        msg += f'\n¬∑ <b>{diagnose.title}</b>\n{diagnose.description}'
                # –û—Ç—Å—ã–ª–∞–µ–º –¥–∏–∞–≥–Ω–æ–∑—ã
                sendMessage(msg, message.chat.id, user)
            # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–∞—á–∏
            if history.doctors:
                # –°–æ–æ–±—â–µ–Ω–∏–µ
                msg: str = f"üë®‚Äç‚öïÔ∏è <b>–í—Ä–∞—á–∏:</b>\n"
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å–ø–∏—Å–∫—É
                for doctor in history.doctors:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    msg += f"\n¬∑ [{doctor.get()['id']}] {doctor.get()['username']}"
                # –û—Ç—Å—ã–ª–∞–µ–º –≤—Ä–∞—á–µ–π
                sendMessage(msg, message.chat.id, user)
    else:
        # –í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        raise KeyError(f"User with id {message.from_user.id} isn't exsist!")


'''
======================================
              –•–û–õ–î–ï–†–´
======================================
'''


# –•–æ–ª–¥–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
@bot.message_handler(content_types=['photo'])
def photoHandler(message):
    try:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
        if (message.from_user.id in ram.keys() or str(message.from_user.id) in ram.keys()
                and ram[message.from_user.id]['document'] is None):
            # –ï—Å–ª–∏ —Å–º–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            if ((ram[message.from_user.id]['type'] == 'system' and
                 ram[message.from_user.id]['operation'] == Operations.ChangeMe) and
                    isinstance(getUser(message.from_user.id), Doctor)):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("üëå –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞...", getUser(message.from_user.id))
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
                ram.pop(message.from_user.id)
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                if ai.checkDocument(ai.ImageRecognize(bot.download_file(bot.get_file(
                        message.photo[-1].file_id).file_path)).textRecognize()):
                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    getUser(message.from_user.id).update(Doctor.Types.document, bot.download_file(
                        bot.get_file(message.photo[-1].file_id).file_path))
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚úî –î–æ–∫—É–º–µ–Ω—Ç –æ–¥–æ–±—Ä–µ–Ω –∏ –∑–∞–ø–∏—Å–∞–Ω –≤ –ø—Ä–æ—Ñ–∏–ª—å!',
                                getUser(message.from_user.id), reply=telebot.types.ReplyKeyboardRemove())
                else:
                    # –û–±—ä–µ–∫—Ç Message
                    call: dict = {
                        'user': getUser(message.from_user.id)
                    }
                    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                    keyboard = telebot.types.InlineKeyboardMarkup()
                    keyboard.add(telebot.types.InlineKeyboardButton(text="üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", url=os.getenv('ADMIN')))
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ –≤ —Å–º–µ–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞!\n\n‚òù –ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Å–µ—Ç–∏'
                                '–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º',
                                getUser(message.from_user.id), reply=keyboard)
                    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    sendMessage('‚Äº <b>–í–Ω–∏–º–∞–Ω–∏–µ!</b>\n–í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—ë–Ω –∏ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω. '
                                '–¢–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –∏–º–µ–µ—Ç —à–∞–Ω—Å –Ω–µ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É!\n –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é?',
                                getUser(message.from_user.id), reply=apply)
                    # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ü–∏—é
                    bot.register_next_step_handler(message, doctorHandler, call, 2)
            # –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –≤–µ—Ä–µ—Ñ–∏–∫–∞—Ü–∏—è
            elif stringToBool(os.getenv('VERIFY')):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("üëå –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞...", message.chat.id, ram[message.from_user.id]['lang'])
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                if ai.checkDocument(ai.ImageRecognize(bot.download_file(bot.get_file(
                        message.photo[-1].file_id).file_path)).textRecognize()):
                    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ñ–æ—Ç–æ
                    ram[message.from_user.id]['document'] = bot.download_file(
                        bot.get_file(message.photo[-1].file_id).file_path)
                    try:
                        # –°–æ–∑–¥–∞—ë–º –∞–∫–∫–∞—É–Ω—Ç
                        Doctor(message.from_user.id).create(ram[message.from_user.id]['name'],
                                                            ram[message.from_user.id]['qualification'],
                                                            ram[message.from_user.id]['document'],
                                                            ram[message.from_user.id]['lang'],
                                                            ram[message.from_user.id]['phone'])
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('‚úî –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!',
                                    message.chat.id, ram[message.from_user.id]['lang'])
                    except Exception as e:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n\nüí¨ –ö–æ–¥: {e}',
                                    message.chat.id, ram[message.from_user.id]['lang'])
                    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    ram.pop(message.from_user.id)
                else:
                    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                    keyboard = telebot.types.InlineKeyboardMarkup()
                    keyboard.add(telebot.types.InlineKeyboardButton(text="üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", url=os.getenv('ADMIN')))
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n\n‚òù –ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Å–µ—Ç–∏'
                                '–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º',
                                message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("üìë –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–º.\n–î–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é. "
                                "–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞", message.chat.id,
                                ram[message.from_user.id]['lang'])
    except Exception:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ
        if message.from_user.id in ram or getUser(message.from_user.id).get()['username'] in ram:
            try:
                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                bot.forward_message(getUser(ram[message.from_user.id]['contactInit']).get()['id'], message.chat.id,
                                    message.message_id)
            except Exception:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è
                    name: str = getUser(message.from_user.id).get()['username']
                    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.forward_message(getUser(ram[name]['contactInit']).get()['id'], message.chat.id,
                                        message.message_id)
                except Exception:
                    # –í—ã–¥–∞—ë–º –æ—à–∏–±–∫—É
                    sendMessage('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!\n–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –¥–∏–∞–ª–æ–≥ –∫–æ–º–∞–Ω–¥–æ–π /stop',
                                message.from_user.id)
        else:
            # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
            for key in ram:
                # –ï—Å–ª–∏ —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç ID –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä
                if 'type' in ram[key] and ram[key]['type'] == 'system' and 'contactInit' in ram[key]:
                    # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                    if (ram[key]['contactInit'] == message.from_user.id or
                            ram[key]['contactInit'] == getUser(message.from_user.id).get()['username']):
                        try:
                            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            bot.forward_message(getUser(key).get()['id'], message.chat.id, message.message_id)
                        except Exception:
                            try:
                                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                                bot.forward_message(getUser(int(key)).get()['id'], message.chat.id, message.message_id)
                            except Exception:
                                # –í—ã–¥–∞—ë–º –æ—à–∏–±–∫—É
                                sendMessage('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!\n–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –¥–∏–∞–ª–æ–≥ –∫–æ–º–∞–Ω–¥–æ–π /stop',
                                            message.from_user.id)


# –•–æ–ª–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã –ø–æ–º–æ—â–∏
@bot.message_handler(commands=['help'])
def help(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    sendMessage(f'ü§ó <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>\n\nüëá <a href="{os.getenv("HELP")}">–ö–ª–∏–∫–Ω–∏ –Ω–∞ –º–µ–Ω—è</a>',
                getUser(message.from_user.id))


# –•–æ–ª–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã —Å–ø–∏—Å–∫–∞
@bot.message_handler(commands=['list'])
def listCommand(message):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    userList: List[Union[Doctor, Patient]] = getAllUserList()
    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç–æ–π
    if userList:
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
            args: List[str] = message.text.split()
            args = args[1:]
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
            for case in Switch(args[0]):
                if case('doctors') or case('doctors') or case('–¥–æ–∫—Ç–æ—Ä–∞'):
                    # –°–æ–æ–±—â–µ–Ω–∏–µ
                    msg: str = "üìÉ <b>–°–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π –∏ –∞–¥–º–∏–Ω–æ–≤:</b>\n\nüë®‚Äç‚öïÔ∏è <b>–í—Ä–∞—á–∏:</b>\n"
                    # –°–ª–æ–≤–∞—Ä–∏
                    doctors: dict = {
                        'count': 0,
                        'message': ""
                    }
                    # –ü–µ—Ä–µ–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
                    for user in userList:
                        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤—Ä–∞—á
                        if isinstance(user, Doctor):
                            # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∏—Ç—Ç–µ—Ä–∞—Ç–æ—Ä
                            doctors['count'] += 1
                            # –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å
                            director: Doctor = None
                            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å
                            for item in getAllUserList():
                                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤—Ä–∞—á
                                if isinstance(item, Doctor):
                                    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–µ
                                    if item.getSubordinates():
                                        # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–º
                                        for sub in item.getSubordinates():
                                            # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                                            if sub.get['id'] == user.get()['id']:
                                                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
                                                director = item
                            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å
                            if director is None:
                                # –ï—Å–ª–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
                                if user.get()['document'] is not None:
                                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                                    if 'phone' in user.get():
                                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                        doctors['message'] += (f"‚úî {doctors['count']}. {user.get()['username']} "
                                                               f"[{user.get()['qualification']}]\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: "
                                                               f"{user.get()['phone']}\n")
                                    else:
                                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                        doctors['message'] += (f"‚úî {doctors['count']}. {user.get()['username']} "
                                                               f"[{user.get()['qualification']}]\n")
                                else:
                                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                                    if 'phone' in user.get():
                                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                        doctors['message'] += (f"{doctors['count']}. {user.get()['username']} "
                                                               f"[{user.get()['qualification']}]\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: "
                                                               f"{user.get()['phone']}\n")
                                    else:
                                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                        doctors['message'] += (f"{doctors['count']}. {user.get()['username']} "
                                                               f"[{user.get()['qualification']}]\n")
                            else:
                                # –ï—Å–ª–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
                                if user.get()['document'] is not None:
                                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                                    if 'phone' in user.get():
                                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                        doctors['message'] += (f"‚úî {doctors['count']}. {user.get()['username']} "
                                                               f"[{user.get()['qualification']}]\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: "
                                                               f"{user.get()['phone']}\nüë®‚Äç‚öïÔ∏è –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: "
                                                               f"{director.get()['username']}\n")
                                    else:
                                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                        doctors['message'] += (f"‚úî {doctors['count']}. {user.get()['username']} "
                                                               f"[{user.get()['qualification']}]\nüë®‚Äç‚öïÔ∏è –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: "
                                                               f"{director.get()['username']}\n")
                                else:
                                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                                    if 'phone' in user.get():
                                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                        doctors['message'] += (f"{doctors['count']}. {user.get()['username']} "
                                                               f"[{user.get()['qualification']}]\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: "
                                                               f"{user.get()['phone']}\nüë®‚Äç‚öïÔ∏è –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: "
                                                               f"{director.get()['username']}\n")
                                    else:
                                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                        doctors['message'] += (f"{doctors['count']}. {user.get()['username']} "
                                                               f"[{user.get()['qualification']}]\nüë®‚Äç‚öïÔ∏è –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: "
                                                               f"{director.get()['username']}\n")
                    # –ü—Ä–∏–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                    msg += doctors['message']
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage(msg, getUser(message.from_user.id))
                    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                    break
                elif case('admins') or case('admin') or case('–∞–¥–º–∏–Ω—ã'):
                    # –°–æ–æ–±—â–µ–Ω–∏–µ
                    msg: str = "üìÉ <b>–°–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π –∏ –∞–¥–º–∏–Ω–æ–≤:</b>\n\nüïµÔ∏è‚Äç‚ôÇÔ∏è <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è: </b>\n"
                    # –°–ª–æ–≤–∞—Ä–∏
                    admins: dict = {
                        'count': 0,
                        'message': ""
                    }
                    # –ü–µ—Ä–µ–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
                    for user in userList:
                        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                        if Admin(user).getAdmin()['level'] > 0:
                            # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∏—Ç—Ç–µ—Ä–∞—Ç–æ—Ä
                            admins['count'] += 1
                            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å
                            if Admin(user).getAdmin()['prefix'] != "undefined":
                                # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                admins['message'] += (f"{admins['count']}. {user.get()['username']} "
                                                      f"[{Admin(user).getAdmin()['prefix']}]\n")
                            else:
                                # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                                admins['message'] += f"{admins['count']}. {user.get()['username']}\n"
                    # –ü—Ä–∏–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                    msg += admins['message']
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage(msg, getUser(message.from_user.id))
                    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                    break
                elif case():
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚òù <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç!</b>\n\n–ú–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã –∏–º–µ–ª–∏ –≤–≤–∏–¥—É ¬´/list¬ª, '
                                '¬´/list doctors¬ª –∏–ª–∏ ¬´/list admins¬ª?', getUser(message.from_user.id))
                    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                    break
        except Exception:
            # –°–æ–æ–±—â–µ–Ω–∏–µ
            msg: str = "üìÉ <b>–°–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π –∏ –∞–¥–º–∏–Ω–æ–≤:</b>\n\nüïµÔ∏è‚Äç‚ôÇÔ∏è <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è: </b>\n"
            # –°–ª–æ–≤–∞—Ä–∏
            admins: dict = {
                'count': 0,
                'message': ""
            }
            doctors: dict = {
                'count': 0,
                'message': ""
            }
            # –ü–µ—Ä–µ–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            for user in userList:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                if Admin(user).getAdmin()['level'] > 0:
                    # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∏—Ç—Ç–µ—Ä–∞—Ç–æ—Ä
                    admins['count'] += 1
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å
                    if Admin(user).getAdmin()['prefix'] != "undefined":
                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                        admins['message'] += (f"{admins['count']}. {user.get()['username']} "
                                              f"[{Admin(user).getAdmin()['prefix']}]\n")
                    else:
                        # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                        admins['message'] += f"{admins['count']}. {user.get()['username']}\n"
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –≤—Ä–∞—á
                if isinstance(user, Doctor):
                    # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –∏—Ç—Ç–µ—Ä–∞—Ç–æ—Ä
                    doctors['count'] += 1
                    # –ï—Å–ª–∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
                    if user.get()['document'] is not None:
                        # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                        if 'phone' in user.get():
                            # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                            doctors['message'] += (f"‚úî {doctors['count']}. {user.get()['username']} "
                                                   f"[{user.get()['qualification']}]\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: "
                                                   f"{user.get()['phone']}\n")
                        else:
                            # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                            doctors['message'] += (f"‚úî {doctors['count']}. {user.get()['username']} "
                                                   f"[{user.get()['qualification']}]\n")
                    else:
                        # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                        if 'phone' in user.get():
                            # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                            doctors['message'] += (f"{doctors['count']}. {user.get()['username']} "
                                                   f"[{user.get()['qualification']}]\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: "
                                                   f"{user.get()['phone']}\n")
                        else:
                            # –í–Ω–æ—Å–∏–º –≤ —Å–ø–∏—Å–æ–∫
                            doctors['message'] += (f"{doctors['count']}. {user.get()['username']} "
                                                   f"[{user.get()['qualification']}]\n")
            # –ü—Ä–∏–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            msg += f"{admins['message']}\nüë®‚Äç‚öïÔ∏è <b>–í—Ä–∞—á–∏:</b>\n{doctors['message']}"
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage(msg, getUser(message.from_user.id))
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        sendMessage('üò• –£ –Ω–∞—Å –µ—â—ë –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...', getUser(message.from_user.id))


# –•–æ–ª–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞
@bot.message_handler(commands=['admin'])
def adminPanel(message):
    # –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if getUser(message.from_user.id) is not None:
        # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∞
        admin: Admin = Admin(getUser(message.from_user.id))
        # –ï—Å–ª–∏ –∞–¥–º–∏–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if admin.getAdmin() is not None and admin.getUser().isExsist():
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(
                telebot.types.InlineKeyboardButton("üí¨ –°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                                                   callback_data=f"contactUser|{admin.getUser().get()['id']}"),
            )
            keyboard.add(
                telebot.types.InlineKeyboardButton("üïµ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞",
                                                   callback_data=f"makeAdmin|{admin.getUser().get()['id']}"),
                telebot.types.InlineKeyboardButton("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞",
                                                   callback_data=f"removeAdmin|{admin.getUser().get()['id']}")
            )
            keyboard.add(
                telebot.types.InlineKeyboardButton("üí• –†–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –≤—Ä–∞—á–∞",
                                                   callback_data=f"removeDoctor|{admin.getUser().get()['id']}")
            )
            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å
            if 'prefix' in admin.getAdmin() and admin.getAdmin()['prefix'] != 'undefined':
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(f'üëã <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:</b>\n\n–ù–∏–∫: {admin.getUser().get()["username"]}\n–ü—Ä–µ—Ñ–∏–∫—Å: '
                            f'{admin.getAdmin()["prefix"]}\n–£—Ä–æ–≤–µ–Ω—å: {admin.getAdmin()["level"]}',
                            message.chat.id, admin.getUser(), reply=keyboard)
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(f'üëã <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:</b>\n\n–ù–∏–∫: {admin.getUser().get()["username"]}'
                            f'\n–£—Ä–æ–≤–µ–Ω—å: {admin.getAdmin()["level"]}',
                            message.chat.id, admin.getUser(), reply=keyboard)
        else:
            # –û—Ç—Å—ã–ª–∞–µ–º –æ—à–∏–±–∫—É
            sendMessage('‚òù –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!', message.chat.id, admin.getUser())
    else:
        # –û—Ç—Å—ã–ª–∞–µ–º –æ—à–∏–±–∫—É
        sendMessage('‚òù –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!', message.chat.id, getUser(message.from_user.id))


# –•–æ–ª–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç –∏ –ø—Ä–æ—Ñ–∏–ª—å
@bot.message_handler(commands=['start', 'profile'])
def start(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    if len(str(message.text).split()) == 1:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if getUser(message.from_user.id) is not None:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            profile(message)
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
            if message.from_user.id in ram.keys() and ram[message.from_user.id]['lang'] is not None:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!', message.chat.id, ram[message.from_user.id]['lang'])
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                ram.pop(message.from_user.id)
            else:
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(telebot.types.KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
                             telebot.types.KeyboardButton(text="üá∫üá∏ English"))
                keyboard.add(telebot.types.KeyboardButton(text="üáßüáæ –ë–µ–ª–∞—Ä—É—Å–∫—ñ"),
                             telebot.types.KeyboardButton(text="üá®üá≥ ‰∏≠Êñá"))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ùó –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', message.chat.id, getUser(message.from_user.id), reply=keyboard)
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                bot.register_next_step_handler(message, register)
    elif (len(str(message.text).split()) == 2 and checkInt(str(message.text).split()[1]) and
          message.from_user.id not in ram.keys()):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if getUser(message.from_user.id) is not None and isinstance(getUser(message.from_user.id), Patient):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            user: Union[Patient, Doctor] = getUser(int(str(message.text).split()[1]))
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID - –≤—Ä–∞—á
            if user is not None and isinstance(user, Doctor):
                # –í–Ω–æ—Å–∏–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫
                user.update(Doctor.Types.patients, getUser(message.from_user.id))
                # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                sendMessage(f"ü§ù –í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –∫ –¥–æ–∫—Ç–æ—Ä—É {user.get()['username']}",
                            message.chat.id, getUser(message.from_user.id))
                sendMessage(f"ü§ù –ö –≤–∞–º –∑–∞–ø–∏—Å–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç: "
                            f"{getUser(message.from_user.id).get()['username']}", user)
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("–ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –í–∞—Å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–∫—Ç–æ—Ä–æ–º üò•",
                            message.chat.id, getUser(message.from_user.id))
        elif getUser(message.from_user.id) is None:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
            if message.from_user.id in ram.keys() and ram[message.from_user.id]['lang'] is not None:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!', message.chat.id, ram[message.from_user.id]['lang'])
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                ram.pop(message.from_user.id)
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                user: Union[Patient, Doctor] = getUser(int(str(message.text).split()[1]))
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID - –≤—Ä–∞—á
                if user is not None and isinstance(user, Doctor):
                    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    keyboard.add(telebot.types.KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
                                 telebot.types.KeyboardButton(text="üá∫üá∏ English"))
                    keyboard.add(telebot.types.KeyboardButton(text="üáßüáæ –ë–µ–ª–∞—Ä—É—Å–∫—ñ"),
                                 telebot.types.KeyboardButton(text="üá®üá≥ ‰∏≠Êñá"))
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚ùó –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', message.chat.id, getUser(message.from_user.id),
                                reply=keyboard)
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, register, user)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("–ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –í–∞—Å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–∫—Ç–æ—Ä–æ–º üò•",
                                message.chat.id, getUser(message.from_user.id))
        elif isinstance(getUser(message.from_user.id), Doctor):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            user: Union[Patient, Doctor] = getUser(int(str(message.text).split()[1]))
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID - –≤—Ä–∞—á
            if user is not None and isinstance(user, Doctor):
                # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º –≤—Ä–∞—á–∞ –∫ –∫–æ–º–∞–Ω–¥–µ
                user.update(Doctor.Types.subordinates, getUser(message.from_user.id))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                sendMessage(f"üë®‚Äç‚öïÔ∏èü§ùüë®‚Äç‚öïÔ∏è <b>–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ!</b>\n\n–í–∞—à —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: "
                            f"{user.get()['username']}",
                            message.chat.id, getUser(message.from_user.id))
                sendMessage(f"üë®‚Äç‚öïÔ∏èü§ùüë®‚Äç‚öïÔ∏è <b>–°—Ç–æ—Ä—É–¥–Ω–∏–∫ {getUser(message.from_user.id).get()['username']} "
                            f"–ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ!</b", user)
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("–ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –í–∞—Å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–∫—Ç–æ—Ä–æ–º üò•",
                            message.chat.id, getUser(message.from_user.id))


# –•–æ–ª–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∏–∞–ª–æ–≥–∞
@bot.message_handler(commands=['stop'])
def stop(message: telebot.types.Message):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ
    if message.from_user.id in ram or getUser(message.from_user.id).get()['username'] in ram:
        # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        sendMessage('üò• –í—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –¥–∏–∞–ª–æ–≥', getUser(message.from_user.id))
        try:
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('üò• –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª –¥–∏–∞–ª–æ–≥',
                        getUser(ram[message.from_user.id]['contactInit']), getUser(message.from_user.id))
        except Exception:
            # –ü–æ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('‚ùå –î–∏–∞–ª–æ–≥ –ø—Ä–µ–∫—Ä–∞—â—ë–Ω —Å –æ—à–∏–±–∫–æ–π.\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
                        getUser(message.from_user.id))
        # –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
        ram.pop(message.from_user.id)
        # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        return None
    else:
        # –ö–ª—é—á –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ
        removeKey: Union[str, int] = 0
        # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
        for key in ram:
            # –ï—Å–ª–∏ —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç ID –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä
            if 'type' in ram[key] and ram[key]['type'] == 'system' and 'contactInit' in ram[key]:
                # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                if (ram[key]['contactInit'] == message.from_user.id or
                        ram[key]['contactInit'] == getUser(message.from_user.id).get()['username']):
                    try:
                        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('üò• –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª –¥–∏–∞–ª–æ–≥', getUser(key),
                                    getUser(ram[key]['contactInit']))
                    except Exception:
                        # –ü–æ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('‚ùå –î–∏–∞–ª–æ–≥ –ø—Ä–µ–∫—Ä–∞—â—ë–Ω —Å –æ—à–∏–±–∫–æ–π.\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
                                    getUser(message.from_user.id))
                    # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∫–ª—é—á
                    removeKey = key
        try:
            # –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
            ram.pop(removeKey)
            # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('üò• –í—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –¥–∏–∞–ª–æ–≥', getUser(message.from_user.id))
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            return None
        except Exception:
            pass
    # –ü–æ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    sendMessage('‚òù –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ!', getUser(message.from_user.id))


# –ü—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=["text", "audio", "document", "sticker", "video", "video_note", "voice"])
def getMessage(message: telebot.types.Message):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if getUser(message.from_user.id) is not None:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ
        if message.from_user.id in ram or getUser(message.from_user.id).get()['username'] in ram:
            try:
                # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                bot.forward_message(getUser(ram[message.from_user.id]['contactInit']).get()['id'], message.chat.id,
                                    message.message_id)
            except Exception:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è
                    name: str = getUser(message.from_user.id).get()['username']
                    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.forward_message(getUser(ram[name]['contactInit']).get()['id'], message.chat.id,
                                        message.message_id)
                except Exception:
                    # –í—ã–¥–∞—ë–º –æ—à–∏–±–∫—É
                    sendMessage('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!\n–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –¥–∏–∞–ª–æ–≥ –∫–æ–º–∞–Ω–¥–æ–π /stop',
                                message.from_user.id)
        # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
        for key in ram:
            # –ï—Å–ª–∏ —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–π –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç ID –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä
            if 'type' in ram[key] and ram[key]['type'] == 'system' and 'contactInit' in ram[key]:
                # –ï—Å–ª–∏ ID —Å–æ–≤–ø–∞–ª–∏
                if (ram[key]['contactInit'] == message.from_user.id or
                        ram[key]['contactInit'] == getUser(message.from_user.id).get()['username']):
                    try:
                        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.forward_message(getUser(key).get()['id'], message.chat.id, message.message_id)
                    except Exception:
                        # –í—ã–¥–∞—ë–º –æ—à–∏–±–∫—É
                        sendMessage('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!\n–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –¥–∏–∞–ª–æ–≥ –∫–æ–º–∞–Ω–¥–æ–π /stop',
                                    message.from_user.id)


'''
======================================
          –°–ò–°–¢–ï–ú–ù–´–ï –§–£–ù–ö–¶–ò–ò
======================================
'''


# –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞
def makeContact(call: telebot.types.Message, message: dict, step: int = 0) -> bool:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if step == 0:
        try:
            # –ï—Å–ª–∏ –Ω–µ –≤ —á–∞—Ç–µ
            if int(call.text) not in ram and call.text not in ram:
                try:
                    # –ï—Å–ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if getUser(int(call.text)) is not None:
                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å
                        ram[int(call.text)] = {'type': 'system'}
                        ram[int(call.text)]['operation'] = Operations.Contact
                        ram[int(call.text)]['contactInit'] = call.from_user.id
                        # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('üëå –ö–æ–Ω—Ç–∞–∫—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç—É '
                                    '–¥–æ –∫–æ–º–∞–Ω–¥—ã /stop',
                                    message['user'])
                        # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage(f'üëå –ö–æ–Ω—Ç–∞–∫—Ç c –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message['user'].get()['username']} '
                                    f'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç—É –¥–æ –∫–æ–º–∞–Ω–¥—ã /stop',
                                    getUser(int(call.text)))
                        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        return True
                    else:
                        # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage(f'‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {call.text} –Ω–µ –Ω–∞–π–¥–µ–Ω',
                                    message['user'])
                        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        return False
                except Exception:
                    # –ï—Å–ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if getUser(call.text) is not None:
                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å
                        ram[call.text] = {'type': 'system'}
                        ram[call.text]['operation'] = Operations.Contact
                        ram[call.text]['contactInit'] = call.from_user.id
                        # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('üëå –ö–æ–Ω—Ç–∞–∫—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç—É '
                                    '–¥–æ –∫–æ–º–∞–Ω–¥—ã /stop', message['user'], reply=telebot.types.ReplyKeyboardRemove())
                        # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage(f'üëå –ö–æ–Ω—Ç–∞–∫—Ç c –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message['user'].get()['username']} '
                                    f'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç—É –¥–æ –∫–æ–º–∞–Ω–¥—ã /stop',
                                    getUser(call.text), reply=telebot.types.ReplyKeyboardRemove())
                        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        return True
                    else:
                        # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage(f'‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {call.text} –Ω–µ –Ω–∞–π–¥–µ–Ω',
                                    message['user'])
                        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        return False
            else:
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(telebot.types.KeyboardButton(text="‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å"))
                # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ –¥–∏–∞–ª–æ–≥–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã, –ø—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥!',
                            message['user'], reply=keyboard)
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å
                bot.register_next_step_handler(call, makeContact, message, 1)
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                return False
        except ValueError:
            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage(f'‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {call.text} –Ω–µ –Ω–∞–π–¥–µ–Ω',
                        message['user'])
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            return False
    else:
        try:
            # –£–¥–∞–ª—è–µ–º –∫–ª—é—á
            ram.pop(int(call.text))
        except KeyError:
            # –£–¥–∞–ª—è–µ–º –∫–ª—é—á
            ram.pop(call.text)
        # –ü–æ–≤—Ç–æ—Ä—è–µ–º –≤—ã–∑–æ–≤
        makeContact(call, message)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return False


# –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç–∞ (–±–æ–ª–µ–µ —É–¥–æ–±–Ω–∞—è –≤–µ—Ä—Å–∏—è)
def makeContactFixed(call: telebot.types.Message,
                     fromUser: Union[Patient, Doctor], toUser: Union[Patient, Doctor], step: int = 0) -> bool:
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if step == 0:
        # –í –∫–æ–Ω—Ç–∞–∫—Ç–µ
        contact: bool = False
        # –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
        try:
            # –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–µ –≤ —á–∞—Ç–µ
            if toUser.get()['id'] not in ram and toUser.get()['id'] not in ram:
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
                for key in ram:
                    # –ï—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç—å—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –∫–ª—é—á
                    if ('type' in ram[key] and 'operation' in ram['key'] and
                            ram[key]['operation'] == Operations.Contact):
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á
                        if (ram[key]['contactInit'] == fromUser.get()['id'] or
                                ram[key]['contactInit'] == fromUser.get()['username']):
                            # –í –∫–æ–Ω—Ç–∞–∫—Ç–µ
                            contact = True
                            # –õ–æ–º–∞–µ–º –∏—Ç—Ç–µ—Ä–∞—Ü–∏—é
                            break
                # –ï—Å–ª–∏ –Ω–µ –≤ —á–∞—Ç–µ
                if not contact:
                    # –ï—Å–ª–∏ –Ω–µ –≤ —á–∞—Ç–µ
                    if fromUser.get()['id'] not in ram and fromUser.get()['username'] not in ram:
                        # –ï—Å–ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                        if fromUser is not None:
                            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å
                            ram[toUser.get()['id']] = {'type': 'system'}
                            ram[toUser.get()['id']]['operation'] = Operations.Contact
                            ram[toUser.get()['id']]['contactInit'] = fromUser.get()['id']
                            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            sendMessage('üëå –ö–æ–Ω—Ç–∞–∫—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤—ã–≤–∞—Ç—å—Å—è '
                                        '–∫–æ–Ω—Ç–∞–∫—Ç—É –¥–æ –∫–æ–º–∞–Ω–¥—ã /stop', fromUser,
                                        reply=telebot.types.ReplyKeyboardRemove())
                            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            sendMessage(f'üëå –ö–æ–Ω—Ç–∞–∫—Ç c –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {fromUser.get()['username']} '
                                        f'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤—ã–≤–∞—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç—É –¥–æ –∫–æ–º–∞–Ω–¥—ã '
                                        f'/stop', toUser, reply=telebot.types.ReplyKeyboardRemove())
                            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                            return True
                        else:
                            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            sendMessage(f'‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID '
                                        f'{toUser.get()["id"]} –Ω–µ –Ω–∞–π–¥–µ–Ω', fromUser)
                            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                            return False
                    else:
                        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                        keyboard.add(telebot.types.KeyboardButton(text="‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å"))
                        # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage('‚òù –ó–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ –¥–∏–∞–ª–æ–≥–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã, –ø—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥!',
                                    fromUser, reply=keyboard)
                        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å
                        bot.register_next_step_handler(call, makeContactFixed, 1)
                        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                        return False
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage(f'‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID '
                                f'{toUser.get()["id"]} —É–∂–µ –≤ –¥–∏–∞–ª–æ–≥–µ!', fromUser)
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    return False
        except ValueError:
            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage(f'‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {toUser.get()["id"]} –Ω–µ –Ω–∞–π–¥–µ–Ω',
                        fromUser)
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            return False
    else:
        # –£–¥–∞–ª—è–µ–º –∫–ª—é—á
        ram.pop(toUser.get()['id'])
        # –ü–æ–≤—Ç–æ—Ä—è–µ–º –≤—ã–∑–æ–≤
        makeContact(call, fromUser, toUser)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        return False


# –û—á–∏—Å—Ç–∫–∞ –û–ó–£
def clearRAM(ramDict: dict, patientKeysRequired: int = 6, doctorKeysRequired: int = 5):
    # –í–µ—á–Ω—ã–π —Ü–∏–∫–ª
    while True:
        # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ
        doClear: bool = True
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—â–∏—Ö—Å—è
        for key in ramDict.keys():
            try:
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–ª—é—á
                if (ramDict[key]['type'] == 'doctor' and len(ramDict[key].keys()) < doctorKeysRequired or
                        ramDict[key]['type'] == 'patient' and len(ramDict[key].keys()) < patientKeysRequired):
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
                    doClear = False
                elif ramDict[key]['type'] == 'system':
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
                    doClear = False
            except KeyError:
                pass
        # –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
        if doClear:
            # –ï—Å–ª–∏ —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
            if stringToBool(os.getenv('DEBUG')):
                # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                print(f"Current RAM: {ram} was cleaned!\nCurrent cooldown: {os.getenv('TIMER')}")
            # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å
            ramDict.clear()
        # –ó–∞–¥–µ—Ä–∂–∫–∞
        time.sleep(int(os.getenv('TIMER')))


# –ó–∞–ø—É—Å–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
threading.Thread(target=clearRAM, args=(ram,)).start()

# –¶–∏–∫–ª
bot.infinity_polling()
