"""
======================================
        HealthAI Telegram –ë–æ—Ç
======================================
–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –°–∞–≤—É–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä
"""

# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏
import ai
import os
import time
import telebot
import threading
from typing import Union
from dotenv import load_dotenv
from deep_translator import GoogleTranslator
from support import checkInt, Switch, ram, stringToBool
from database import Patient, Doctor, getUser, History, Admin

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
ai.initAi()
load_dotenv()
bot = telebot.TeleBot(os.getenv("TOKEN"))

'''
======================================
            –û–¢–ö–õ–ò–ö–ò –ë–û–¢–ê      
======================================
'''


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline –∑–∞–ø—Ä–æ—Å–æ–≤ –≤—Ä–∞—á–∞
def callCheckDoctor(message: dict):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(message['message']):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        if case():
            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('üòê Callback –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!',
                        message['user'])
        elif case('doctorAnonim'):
            pass
        elif case('patient'):
            pass
        elif case('qualification'):
            pass
        elif case('patientKick'):
            pass
        elif case('passchangePhoto'):
            pass
        elif case('doctorKick'):
            pass


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–∞—Ü–∏–µ–Ω—Ç–∞
def callCheckPatient(message: dict):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(message['message']):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        if case():
            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('üòê Callback –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!',
                        message['user'])
        elif case('contactDoctor'):
            pass
        elif case('anonContactDoctor'):
            pass
        elif case('patientExtract'):
            pass
        elif case('patientDoctorKick'):
            pass


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline –∑–∞–ø—Ä–æ—Å–æ–≤ –∞–¥–º–∏–Ω–∞
def callCheckAdmin(message: dict):
    # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º
    for case in Switch(message['message']):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        if case():
            # –û—Ç—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('üòê Callback –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω.\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!',
                        message['user'])
        elif case('makeAdmin'):
            pass
        elif case('removeAdmin'):
            pass
        elif case('removeDoctor'):
            pass


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline –∑–∞–ø—Ä–æ—Å–æ–≤
@bot.callback_query_handler(func=lambda call: True)
def callCheck(call: telebot.types.CallbackQuery):
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user: Union[Patient, Doctor, type(None)] = getUser(int(call.message.text.split('|')[1]))
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω
    if user is not None and user.isExsist():
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message: dict = {
            'user': user,
            'message': call.message.text.split('|')[0],
            'params': call.message.text.split('|')[:2]
        }
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω
        if Admin(user).getAdmin() is not None:
            # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä
            callCheckAdmin(message)
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–∞—Ü–∏–µ–Ω—Ç
            if isinstance(user, Patient):
                # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä
                callCheckPatient(message)
            elif isinstance(user, Doctor):
                # –ü–µ—Ä–µ–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä
                callCheckDoctor(message)


'''
======================================
        –°–ò–°–¢–ï–ú–ù–´–ï –§–£–ù–ö–¶–ò–ò –ë–û–¢–ê        
======================================
'''


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def sendMessage(message: str, to: Union[Patient, Doctor, int], self: Union[Patient, Doctor, str, None] = None,
                reply: Union[telebot.types.InlineKeyboardMarkup, telebot.types.ReplyKeyboardMarkup,
                telebot.types.ReplyKeyboardRemove(), type(None)] = None, photo: Union[bytes, type(None)] = None,
                parse_mode: str = 'html'):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
    if isinstance(self, Patient) or isinstance(self, Doctor):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
        if isinstance(to, Patient) or isinstance(to, Doctor):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–∑—ã–∫–∞
            if self.get()['lang'] == to.get()['lang']:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if photo is None:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(to.get()['id'], message, parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(to.get()['id'], message, parse_mode, reply_markup=reply)
                else:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        bot.send_photo(to.get()['id'], photo, message, parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        bot.send_photo(to.get()['id'], photo, message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if photo is None:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(to.get()['id'],
                                         GoogleTranslator(source='auto', target=to.get()['lang']).translate(message),
                                         parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(to.get()['id'],
                                         GoogleTranslator(source='auto', target=to.get()['lang']).translate(message),
                                         parse_mode, reply_markup=reply)
                else:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        bot.send_photo(to.get()['id'], photo,
                                       GoogleTranslator(source='auto', target=to.get()['lang']).translate(message),
                                       parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        bot.send_photo(to.get()['id'], photo,
                                       GoogleTranslator(source='auto', target=to.get()['lang']).translate(message),
                                       parse_mode, reply_markup=reply)
        elif isinstance(to, int):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
            if photo is None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(to, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(to, message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    bot.send_photo(to, photo, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    bot.send_photo(to, photo, message, parse_mode, reply_markup=reply)
    elif isinstance(self, type(None)):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
        if isinstance(to, Patient) or isinstance(to, Doctor):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
            if photo is None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(to.get()['id'], message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(to.get()['id'], message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    bot.send_photo(to.get()['id'], photo, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    bot.send_photo(to.get()['id'], photo, message, parse_mode, reply_markup=reply)
        elif isinstance(to, int):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
            if photo is None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(to, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(to, message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    bot.send_photo(to, photo, message, parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    bot.send_photo(to, photo, message, parse_mode, reply_markup=reply)
    elif isinstance(self, str):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
        if isinstance(to, Patient) or isinstance(to, Doctor):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–∑—ã–∫–∞
            if self == to.get()['lang']:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if photo is None:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(to.get()['id'], message, parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(to.get()['id'], message, parse_mode, reply_markup=reply)
                else:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        bot.send_photo(to.get()['id'], photo, message, parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        bot.send_photo(to.get()['id'], photo, message, parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if photo is None:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(to.get()['id'],
                                         GoogleTranslator(source='auto', target=to.get()['lang']).translate(message),
                                         parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        bot.send_message(to.get()['id'],
                                         GoogleTranslator(source='auto', target=to.get()['lang']).translate(message),
                                         parse_mode, reply_markup=reply)
                else:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                    if reply is None:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        bot.send_photo(to.get()['id'], photo,
                                       GoogleTranslator(source='auto', target=to.get()['lang']).translate(message),
                                       parse_mode)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                        bot.send_photo(to.get()['id'], photo,
                                       GoogleTranslator(source='auto', target=to.get()['lang']).translate(message),
                                       parse_mode, reply_markup=reply)
        elif isinstance(to, int):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
            if photo is None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(to, GoogleTranslator(source='auto', target=self).translate(message), parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    bot.send_message(to, GoogleTranslator(source='auto', target=self).translate(message),
                                     parse_mode, reply_markup=reply)
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π
                if reply is None:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    bot.send_photo(to, photo, GoogleTranslator(source='auto', target=self).translate(message),
                                   parse_mode)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                    bot.send_photo(to, photo, GoogleTranslator(source='auto', target=self).translate(message),
                                   parse_mode, reply_markup=reply)


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Ä–∞—á–∞
def registerDoctor(message, step: int = 0):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for case in Switch(step):
        if case(0):
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é
            ram[message.from_user.id]['qualification'] = message.text
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            ram[message.from_user.id]['document'] = None
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage("‚úî –ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞",
                        message.chat.id, ram[message.from_user.id]['lang'], reply=telebot.types.ReplyKeyboardRemove())
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è
            if stringToBool(os.getenv('VERIFY')):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("üìë –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–º.\n–î–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é. "
                            "–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞", message.chat.id,
                            ram[message.from_user.id]['lang'])
            else:
                # –°–æ–∑–¥–∞—ë–º –∞–∫–∫–∞—É–Ω—Ç
                Doctor(message.from_user.id).create(ram[message.from_user.id]['name'],
                                                    ram[message.from_user.id]['qualification'],
                                                    ram[message.from_user.id]['document'],
                                                    ram[message.from_user.id]['lang'],
                                                    ram[message.from_user.id]['phone'])
                # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                ram.pop(message.from_user.id)
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚úî –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!', message.chat.id,
                            getUser(message.from_user.id), reply=telebot.types.ReplyKeyboardRemove())
        # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
        break
    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    return None


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞
def registerPatient(message, step: int = 0, invited: Doctor = None):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for case in Switch(step):
        if case(0):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
            if checkInt(message.text):
                ram[message.from_user.id]['age'] = int(message.text)
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("üòê –û—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                            message.chat.id, ram[message.from_user.id]['lang'],
                            reply=telebot.types.ReplyKeyboardRemove())
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('üîû –£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç', message.chat.id, ram[message.from_user.id]['lang'])
                # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–∞—á
                if invited is not None:
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, registerPatient, 0, invited)
                    break
                else:
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, registerPatient)
                    break
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(telebot.types.KeyboardButton(text="üë® –ú—É–∂—Å–∫–æ–π"),
                         telebot.types.KeyboardButton(text="üë© –ú—É–∂—Å–∫–æ–π"))
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage('ü§î –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª', message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
            bot.register_next_step_handler(message, registerPatient, 1)
            break
        elif case(1):
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª
            ram[message.from_user.id]['sex'] = '–º—É–∂—Å–∫–æ–π' in message.text.lower()
            try:
                # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                Patient(message.from_user.id).create(ram[message.from_user.id]['name'],
                                                     ram[message.from_user.id]['age'],
                                                     ram[message.from_user.id]['sex'], invited,
                                                     ram[message.from_user.id]['lang'],
                                                     ram[message.from_user.id]['phone'])
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚úî –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!', message.chat.id,
                            ram[message.from_user.id]['lang'], reply=telebot.types.ReplyKeyboardRemove())
            except Exception as e:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n\nüí¨ –û—à–∏–±–∫–∞: {e}', message.chat.id,
                            ram[message.from_user.id]['lang'], reply=telebot.types.ReplyKeyboardRemove())
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            ram.pop(message.from_user.id)
            # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
            break
    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    return None


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
def register(message, step: int = -1, invited: Doctor = None):
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        for case in Switch(step):
            if case(-1):
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if message.text.lower().split()[1] in ['—Ä—É—Å—Å–∫–∏–π', 'english', '–±–µ–ª–∞—Ä—É—Å–∫—ñ', '‰∏≠Êñá']:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
                    for elem in Switch(message.text.lower().split()[1]):
                        if elem('—Ä—É—Å—Å–∫–∏–π'):
                            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
                            ram[message.from_user.id] = {'lang': 'ru'}
                            break
                        elif elem('english'):
                            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
                            ram[message.from_user.id] = {'lang': 'en'}
                            break
                        elif elem('–±–µ–ª–∞—Ä—É—Å–∫—ñ'):
                            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
                            ram[message.from_user.id] = {'lang': 'by'}
                            break
                        elif elem('‰∏≠Êñá'):
                            # –°–æ–∑–¥–∞—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∑–∞–ø–∏—Å—å
                            ram[message.from_user.id] = {'lang': 'zh'}
                            break
                        elif elem():
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            sendMessage("üòê –û—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                                        message.chat.id, reply=telebot.types.ReplyKeyboardRemove())
                            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                            keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                            keyboard.add(telebot.types.KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
                                         telebot.types.KeyboardButton(text="üá∫üá∏ English"))
                            keyboard.add(telebot.types.KeyboardButton(text="üáßüáæ –ë–µ–ª–∞—Ä—É—Å–∫—ñ"),
                                         telebot.types.KeyboardButton(text="üá®üá≥ ‰∏≠Êñá"))
                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            sendMessage('‚ùó –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', message.chat.id, getUser(message.from_user.id),
                                        reply=keyboard)
                            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                            bot.register_next_step_handler(message, register, invited)
                            break
                    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    keyboard.add(telebot.types.KeyboardButton(text="‚úî –î–∞"),
                                 telebot.types.KeyboardButton(text="‚ùå –ù–µ—Ç"))
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω.\nüòâ –•–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?",
                                message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, register, 0)
                    break
            elif case(0):
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if message.text.lower().split()[1] in ['–¥–∞', '–Ω–µ—Ç']:
                    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π
                    if '–¥–∞' in message.text.lower():
                        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                        keyboard.add(telebot.types.KeyboardButton(text="ü§ï –ü–∞—Ü–∏–µ–Ω—Ç–∞"),
                                     telebot.types.KeyboardButton(text="üë®‚Äç‚öïÔ∏è –í—Ä–∞—á–∞"))
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage("üòâ –û—Ç–ª–∏—á–Ω–æ! –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫...",
                                    message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                        bot.register_next_step_handler(message, register, 1)
                        break
                    else:
                        # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                        ram.pop(message.from_user.id)
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        sendMessage("üíî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
                                    message.chat.id, getUser(message.from_user.id),
                                    reply=telebot.types.ReplyKeyboardRemove())
                        # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
                        break
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("üòê –û—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                                message.chat.id, ram[message.from_user.id]['lang'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, register, 0)
            elif case(1):
                # –°–æ–æ–±—â–µ–Ω–∏–µ
                msg: str = "% –ù–∞—á–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∫ $\n–£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if message.text.lower().split()[1] in ['–≤—Ä–∞—á–∞', '–ø–∞—Ü–∏–µ–Ω—Ç–∞']:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                    if '–≤—Ä–∞—á' in message.text.lower():
                        # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        ram[message.from_user.id]['type'] = "doctor"
                        # –ú–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        msg = msg.replace('%', 'üë®‚Äç‚öïÔ∏è')
                        msg = msg.replace('$', '–≤—Ä–∞—á–∞')
                    else:
                        # –°–æ–∑–¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        ram[message.from_user.id]['type'] = "patient"
                        # –ú–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        msg = msg.replace('%', 'ü§ï')
                        msg = msg.replace('$', '–ø–∞—Ü–∏–µ–Ω—Ç–∞')
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("üòê –û—Ç–≤–µ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É",
                                message.chat.id, ram[message.from_user.id]['lang'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, register, 1)
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(telebot.types.KeyboardButton(text="‚úî –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç Telegram"))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage(msg, message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                bot.register_next_step_handler(message, register, 2)
                break
            elif case(2):
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if '–æ—Å—Ç–∞–≤–∏—Ç—å' in message.text.lower():
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    ram[message.from_user.id]['name'] = message.from_user.first_name
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    ram[message.from_user.id]['name'] = message.text
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(telebot.types.KeyboardButton(text="‚ùå –ù–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å"))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('üì± –û—Å—Ç–∞–≤–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞?',
                            message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                bot.register_next_step_handler(message, register, 3)
                break
            elif case(3):
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
                if checkInt(message.text):
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                    ram[message.from_user.id]['phone'] = int(message.text)
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚úî –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω!', message.chat.id,
                                ram[message.from_user.id]['lang'])
                else:
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
                    ram[message.from_user.id]['phone'] = 0
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
                if ram[message.from_user.id]['type'] == 'patient':
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('üîû –£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç', message.chat.id, ram[message.from_user.id]['lang'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–∞—á
                    if invited is not None:
                        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                        bot.register_next_step_handler(message, registerPatient, 0, invited)
                        break
                    else:
                        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                        bot.register_next_step_handler(message, registerPatient)
                        break
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('ü§î –£–∫–∞–∂–∏—Ç–µ –≤—Ä–∞—á–µ–±–Ω—É—é –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é',
                                message.chat.id, ram[message.from_user.id]['lang'],
                                reply=telebot.types.ReplyKeyboardRemove())
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, registerDoctor)
                    break
    except Exception:
        pass
    # –õ–æ–º–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    return None


# –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
def profile(message):
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user: Union[Patient, Doctor, type(None)] = getUser(message.from_user.id)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if isinstance(user, Doctor):
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(
            telebot.types.InlineKeyboardButton("üïµ –ü—Ä–∏–Ω–∏–º–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ",
                                               callback_data=f"doctorAnonim|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("ü§î –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞",
                                               callback_data=f"patient|{user.get()['id']}"),
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("üîÅ –°–º–µ–Ω–∞ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏",
                                               callback_data=f"qualification|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("üíî –£–≤–æ–ª–∏—Ç—å—Å—è", callback_data=f"leave|{user.get()['id']}")
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("ü§ï –û—Ç–∫–∞–∑ –æ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞",
                                               callback_data=f"patientKick|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("üìë –°–º–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞",
                                               callback_data=f"changePhoto|{user.get()['id']}")
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("üíî –£–≤–æ–ª–∏—Ç—å –ø–æ–¥—á–∏–Ω—ë–Ω–Ω–æ–≥–æ",
                                               callback_data=f"doctorKick|{user.get()['id']}")
        )
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–ª–µ—á–µ–Ω–Ω—ã–µ
        if user.get()["discharged"] is not None:
            # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω
            if 'phone' in user.get():
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
                if user.get()['document'] is not None:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {user.get()["phone"]}\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: '
                                f'{user.get()["qualification"]}'
                                f'\n–í—ã–ª–µ—á–µ–Ω–Ω—ã–µ: {user.get()["discharged"]}', message.chat.id, user,
                                photo=user.get()['document'], reply=keyboard)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {user.get()["document"]}\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: '
                                f'{user.get()["qualification"]}\n–í—ã–ª–µ—á–µ–Ω–Ω—ã–µ: {user.get()["discharged"]}',
                                message.chat.id, user, reply=keyboard)
            else:
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
                if user.get()['document'] is not None:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:/<b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {user.get()["qualification"]}\n'
                                f'–í—ã–ª–µ—á–µ–Ω–Ω—ã–µ: {user.get()["discharged"]}',
                                message.chat.id, user, photo=user.get()['document'], reply=keyboard)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {user.get()["qualification"]}\n'
                                f'–í—ã–ª–µ—á–µ–Ω–Ω—ã–µ: {user.get()["discharged"]}',
                                message.chat.id, user, reply=keyboard)
        else:
            # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω
            if 'phone' in user.get():
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
                if user.get()['document'] is not None:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {user.get()["phone"]}\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: '
                                f'{user.get()["qualification"]}', message.chat.id, user,
                                photo=user.get()['document'],
                                reply=keyboard)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: {user.get()["document"]}\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: '
                                f'{user.get()["qualification"]}', message.chat.id, user, reply=keyboard)
            else:
                # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ
                if user.get()['document'] is not None:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:/<b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {user.get()["qualification"]}',
                                message.chat.id, user, photo=user.get()['document'], reply=keyboard)
                else:
                    # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                    sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –í—Ä–∞—á\n–ò–º—è: '
                                f'{user.get()["username"]}'
                                f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è: {user.get()["qualification"]}',
                                message.chat.id, user, reply=keyboard)
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–µ
        if user.getSubordinates():
            # –°–æ–æ–±—â–µ–Ω–∏–µ
            msg: str = f'üë®‚Äç‚öïÔ∏è –ü–æ–¥—á–∏–Ω—ë–Ω–Ω—ã–µ: '
            # –ü–µ—Ä–µ–±–æ—Ä –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö
            for doctor in user.getSubordinates():
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg += f"[{doctor.get()['id']}] {doctor.get()['username']}, "
            # –û—Ç—Å—ã–ª–∞–µ–º –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö
            sendMessage(msg[:-1], message.chat.id, user)
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç—ã
        if user.getPatients():
            # –°–æ–æ–±—â–µ–Ω–∏–µ
            msg: str = f'ü§ï –ü–∞—Ü–∏–µ–Ω—Ç—ã: '
            # –ü–µ—Ä–µ–±–æ—Ä –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö
            for patient in user.getPatients():
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg += f"[{patient.get()['id']}] {patient.get()['username']}, "
            # –û—Ç—Å—ã–ª–∞–µ–º –ø–æ–¥—á–∏–Ω—ë–Ω–Ω—ã—Ö
            sendMessage(msg[:-1], message.chat.id, user)
    elif isinstance(user, Patient):
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.add(
            telebot.types.InlineKeyboardButton("üí¨ –°–≤—è–∑—å —Å –≤—Ä–∞—á–æ–º",
                                               callback_data=f"contactDoctor|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("üïµ –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø—Ä–∏—ë–º",
                                               callback_data=f"anonContactDoctor|{user.get()['id']}")
        )
        keyboard.add(
            telebot.types.InlineKeyboardButton("‚ù£ –í—ã–ø–∏—Å–∞—Ç—å—Å—è",
                                               callback_data=f"patientExtract|{user.get()['id']}"),
            telebot.types.InlineKeyboardButton("üíî –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –≤—Ä–∞—á–∞",
                                               callback_data=f"patientDoctorKick|{user.get()['id']}"),
        )
        # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω
        if 'phone' in user.get():
            # –ï—Å–ª–∏ –º—É–∂—Å–∫–æ–π –ø–æ–ª
            if user.get()['sex']:
                # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –ü–∞—Ü–∏–µ–Ω—Ç\n–ò–º—è: {user.get()["username"]}'
                            f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–í–æ–∑—Ä–∞—Å—Ç: {user.get()["age"]}\n–ü–æ–ª: üë® –ú—É–∂—Å–∫–æ–π',
                            message.chat.id, user, reply=keyboard)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –ü–∞—Ü–∏–µ–Ω—Ç\n–ò–º—è: {user.get()["username"]}'
                            f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–í–æ–∑—Ä–∞—Å—Ç: {user.get()["age"]}\n–ü–æ–ª: üë© –ñ–µ–Ω—Å–∫–∏–π',
                            message.chat.id, user, reply=keyboard)
        else:
            # –ï—Å–ª–∏ –º—É–∂—Å–∫–æ–π –ø–æ–ª
            if user.get()['sex']:
                # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –ü–∞—Ü–∏–µ–Ω—Ç\n–ò–º—è: {user.get()["username"]}'
                            f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–í–æ–∑—Ä–∞—Å—Ç: {user.get()["age"]}\n–ü–æ–ª: üë® –ú—É–∂—Å–∫–æ–π',
                            message.chat.id, user, reply=keyboard)
            else:
                # –û—Ç—Å—ã–ª–∞–µ–º –∞–Ω–∫–µ—Ç—É
                sendMessage(f'üí¨ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n–°—Ç–∞—Ç—É—Å: –ü–∞—Ü–∏–µ–Ω—Ç\n–ò–º—è: {user.get()["username"]}'
                            f'\n–¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ù–µ —É–∫–∞–∑–∞–Ω\n–í–æ–∑—Ä–∞—Å—Ç: {user.get()["age"]}\n–ü–æ–ª: üë© –ñ–µ–Ω—Å–∫–∏–π',
                            message.chat.id, user, reply=keyboard)
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –±–æ–ª–µ–∑–Ω–∏
        if user.getHistory() is not None:
            # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            history: History = user.getHistory()
            # –°–æ–æ–±—â–µ–Ω–∏–µ
            msg: str = f'ü§ï <b>–ò—Å—Ç–æ—Ä–∏—è –±–æ–ª–µ–∑–Ω–∏:</b>\n\n–û–ø–∏—Å–∞–Ω–∏–µ: {history.description}\n–ñ–∞–ª–æ–±—ã: '
            f'{history.complaints}\n–ò—Å—Ç–æ—Ä–∏—è –∑–∞–≤–µ–¥–µ–Ω–∞: {history.assigned}'
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–Ω–∞–ª–∏–∑—ã
            if history.analyzes != 'undefined':
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg += f'\n–ê–Ω–∞–ª–∏–∑—ã: {history.analyzes}'
            # –ï—Å–ª–∏ –µ—Å—Ç—å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã
            if history.medicines != 'undefined':
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                msg += f'\n–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã: {history.medicines}'
            # –û—Ç—Å—ã–ª–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            sendMessage(msg, message.chat.id, user)
            # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∏–∞–≥–Ω–æ–∑—ã
            if history.diagnoses:
                # –°–æ–æ–±—â–µ–Ω–∏–µ
                msg: str = f"‚ù£ <b>–î–∏–∞–≥–Ω–æ–∑—ã:</b>\n\n–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: {history.predict}\n–í—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∏–∞–≥–Ω–æ–∑—ã:"
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å–ø–∏—Å–∫—É
                for diagnose in history.diagnoses:
                    # –ï—Å–ª–∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é
                    if diagnose.neuralnetwork:
                        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        msg += (f'\n¬∑ <b>{diagnose.title}</b>\n{diagnose.description}\nü§ñ '
                                f'–í—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é!')
                    else:
                        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        msg += f'\n¬∑ <b>{diagnose.title}</b>\n{diagnose.description}'
                # –û—Ç—Å—ã–ª–∞–µ–º –¥–∏–∞–≥–Ω–æ–∑—ã
                sendMessage(msg, message.chat.id, user)
            # –ï—Å–ª–∏ –µ—Å—Ç—å –≤—Ä–∞—á–∏
            if history.doctors:
                # –°–æ–æ–±—â–µ–Ω–∏–µ
                msg: str = f"üë®‚Äç‚öïÔ∏è <b>–í—Ä–∞—á–∏:</b>\n"
                # –ò—Ç—Ç–µ—Ä–∞—Ü–∏—è –ø–æ —Å–ø–∏—Å–∫—É
                for doctor in history.doctors:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    msg += f"\n¬∑ [{doctor.get()['id']}] {doctor.get()['username']}"
                # –û—Ç—Å—ã–ª–∞–µ–º –≤—Ä–∞—á–µ–π
                sendMessage(msg, message.chat.id, user)
    else:
        # –í—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
        raise KeyError(f"User with id {message.from_user.id} isn't exsist!")


'''
======================================
              –•–û–õ–î–ï–†–´
======================================
'''


# –•–æ–ª–¥–µ—Ä —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
@bot.message_handler(content_types=['photo'])
def photoHandler(message):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
    if message.from_user.id in ram.keys() and ram[message.from_user.id]['document'] is None:
        # –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –≤–µ—Ä–µ—Ñ–∏–∫–∞—Ü–∏—è
        if stringToBool(os.getenv('VERIFY')):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage("üëå –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞...", message.chat.id, ram[message.from_user.id]['lang'])
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            if ai.checkDocument(ai.ImageRecognize(bot.download_file(bot.get_file(
                    message.photo[-1].file_id).file_path)).textRecognize()):
                # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ñ–æ—Ç–æ
                ram[message.from_user.id]['document'] = bot.download_file(
                    bot.get_file(message.photo[-1].file_id).file_path)
                try:
                    # –°–æ–∑–¥–∞—ë–º –∞–∫–∫–∞—É–Ω—Ç
                    Doctor(message.from_user.id).create(ram[message.from_user.id]['name'],
                                                        ram[message.from_user.id]['qualification'],
                                                        ram[message.from_user.id]['document'],
                                                        ram[message.from_user.id]['lang'],
                                                        ram[message.from_user.id]['phone'])
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚úî –ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!',
                                message.chat.id, ram[message.from_user.id]['lang'])
                except Exception as e:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n\nüí¨ –ö–æ–¥: {e}',
                                message.chat.id, ram[message.from_user.id]['lang'])
                # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                ram.pop(message.from_user.id)
            else:
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                keyboard = telebot.types.InlineKeyboardMarkup()
                keyboard.add(telebot.types.InlineKeyboardButton(text="üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", url=os.getenv('ADMIN')))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!\n\n‚òù –ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Å–µ—Ç–∏'
                            '–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º',
                            message.chat.id, ram[message.from_user.id]['lang'], reply=keyboard)
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage("üìë –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–º.\n–î–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é. "
                            "–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–æ–æ–±—â–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞", message.chat.id,
                            ram[message.from_user.id]['lang'])


# –•–æ–ª–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞
@bot.message_handler(commands=['admin'])
def adminPanel(message):
    # –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if getUser(message.from_user.id) is not None:
        # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∞
        admin: Admin = Admin(getUser(message.from_user.id))
        # –ï—Å–ª–∏ –∞–¥–º–∏–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if admin.getAdmin() is not None and admin.getUser().isExsist():
            # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard = telebot.types.InlineKeyboardMarkup()
            keyboard.add(
                telebot.types.InlineKeyboardButton("üí¨ –°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º",
                                                   callback_data=f"contactUser|{admin.getUser().get()['id']}"),
            )
            keyboard.add(
                telebot.types.InlineKeyboardButton("üïµ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞",
                                                   callback_data=f"makeAdmin|{admin.getUser().get()['id']}"),
                telebot.types.InlineKeyboardButton("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞",
                                                   callback_data=f"removeAdmin|{admin.getUser().get()['id']}")
            )
            keyboard.add(
                telebot.types.InlineKeyboardButton("üí• –†–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –≤—Ä–∞—á–∞",
                                                   callback_data=f"removeDoctor|{admin.getUser().get()['id']}")
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            sendMessage(f'üëã <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:</b>\n\n–ù–∏–∫: {admin.getUser().get()["username"]}\n–ü—Ä–µ—Ñ–∏–∫—Å: '
                        f'{admin.getAdmin()["prefix"]}\n–£—Ä–æ–≤–µ–Ω—å: {admin.getAdmin()["level"]}',
                        message.chat.id, admin.getUser(), reply=keyboard)
        else:
            # –û—Ç—Å—ã–ª–∞–µ–º –æ—à–∏–±–∫—É
            sendMessage('‚òù –í—ã –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!', message.chat.id, admin.getUser())
    else:
        # –û—Ç—Å—ã–ª–∞–µ–º –æ—à–∏–±–∫—É
        sendMessage('‚òù –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!', message.chat.id, getUser(message.from_user.id))


# –•–æ–ª–¥–µ—Ä –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç –∏ –ø—Ä–æ—Ñ–∏–ª—å
@bot.message_handler(commands=['start', 'profile'])
def start(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    if len(str(message.text).split()) == 1:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if getUser(message.from_user.id) is not None:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            profile(message)
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
            if message.from_user.id in ram.keys() and ram[message.from_user.id]['lang'] is not None:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!', message.chat.id, ram[message.from_user.id]['lang'])
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                ram.pop(message.from_user.id)
            else:
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(telebot.types.KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
                             telebot.types.KeyboardButton(text="üá∫üá∏ English"))
                keyboard.add(telebot.types.KeyboardButton(text="üáßüáæ –ë–µ–ª–∞—Ä—É—Å–∫—ñ"),
                             telebot.types.KeyboardButton(text="üá®üá≥ ‰∏≠Êñá"))
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚ùó –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', message.chat.id, getUser(message.from_user.id), reply=keyboard)
                # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                bot.register_next_step_handler(message, register)
    elif (len(str(message.text).split()) == 2 and checkInt(str(message.text).split()[1]) and
          message.from_user.id not in ram.keys()):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if getUser(message.from_user.id) is not None:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
            profile(message)
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
            if message.from_user.id in ram.keys() and ram[message.from_user.id]['lang'] is not None:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                sendMessage('‚òù –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!', message.chat.id, ram[message.from_user.id]['lang'])
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å
                ram.pop(message.from_user.id)
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                user: Union[Patient, Doctor] = getUser(int(str(message.text).split()[1]))
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID - –≤—Ä–∞—á
                if user is not None and isinstance(user, Doctor):
                    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    keyboard.add(telebot.types.KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"),
                                 telebot.types.KeyboardButton(text="üá∫üá∏ English"))
                    keyboard.add(telebot.types.KeyboardButton(text="üáßüáæ –ë–µ–ª–∞—Ä—É—Å–∫—ñ"),
                                 telebot.types.KeyboardButton(text="üá®üá≥ ‰∏≠Êñá"))
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage('‚ùó –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', message.chat.id, getUser(message.from_user.id),
                                reply=keyboard)
                    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ
                    bot.register_next_step_handler(message, register, user)
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    sendMessage("–ü—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –í–∞—Å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–æ–∫—Ç–æ—Ä–æ–º üò•",
                                message.chat.id, getUser(message.from_user.id))


'''
======================================
          –°–ò–°–¢–ï–ú–ù–´–ï –§–£–ù–ö–¶–ò–ò
======================================
'''


# –û—á–∏—Å—Ç–∫–∞ –û–ó–£
def clearRAM(ramDict: dict, patientKeysRequired: int = 6, doctorKeysRequired: int = 5):
    # –í–µ—á–Ω—ã–π —Ü–∏–∫–ª
    while True:
        # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ
        doClear: bool = True
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—â–∏—Ö—Å—è
        for key in ramDict.keys():
            try:
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–ª—é—á
                if ramDict[key]['type'] == 'doctor' and len(ramDict[key].keys()) < doctorKeysRequired:
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
                    doClear = False
                elif ramDict[key]['type'] == 'patient' and len(ramDict[key].keys()) < patientKeysRequired:
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
                    doClear = False
            except KeyError:
                pass
        # –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
        if doClear:
            # –ï—Å–ª–∏ —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
            if stringToBool(os.getenv('DEBUG')):
                # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                print(f"Current RAM: {ram} was cleaned!\nCurrent cooldown: {os.getenv('TIMER')}")
            # –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å
            ramDict.clear()
        # –ó–∞–¥–µ—Ä–∂–∫–∞
        time.sleep(int(os.getenv('TIMER')))


# –ó–∞–ø—É—Å–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
threading.Thread(target=clearRAM, args=(ram,)).start()

# –¶–∏–∫–ª
bot.infinity_polling()
